프로젝트 관리(1)
제품 개발 생애 주기

사전 질문(15분)
제품 개발의 과정에서 프로덕트 매니저가 주로 수행해야 하는 역할은 무엇일까요? 가능한 아는대로 적어 정리해 봅니다.

제품 개발의 과정은 전반적으로 어떻게 진행될까요? 아는대로 적어 정리해 봅니다.

Case: 제각각의 프로덕트 매니지먼트
첫번째 회사의 프로덕트 매니지먼트: 모든 프로세스에 PM이 참여, 애자일, 린 기반 4주의 출시 간격
두번째 회사의 프로덕트 매니지먼트: 상위 기획단계에서 주요 역할, 워터폴 기반의 3개월의 출시 간격
세번째 회사의 프로덕트 매니지먼트: 부서별 전문성을 존중하는 조율자 역할, 그랜드 오픈을 위한 9개월의 준비
네번째 회사의 프로덕트 매니지먼트: 제품 전략의 수립부터 전담, 애자일, 린 기반의 2주의 출시 간격
다섯번째 회사의 프로덕트 매니지먼트: 구성원들의 자율성을 최대한 확보, 애자일, 린 기반, 전략에 따라 유동적인 출시 간격

제품 개발 프로세스에서 제품 관리자의 역할은?
회사마다 다른 맥락, 공통된 핵심
비전 설정자: 제품의 미래 방향과 목표 정의
고객 대변인: 사용자 니즈를 제품에 반영
우선순위 결정자: 한정된 자원 내에서 최대 가치 창출
팀 연결자: 다양한 부서와 역할 사이의 소통 촉진
데이터 해석자: 정량/정성 데이터 기반 의사결정
“전체 개발 프로세스에서 이런 문제들에 대해 책임감을 갖고 문제를 해결하는 역할"

제품 관리자 역할의 진화
과거의 제품 관리자
초기 역할: 마케팅과 제품 기획 사이의 중간자
초점: 요구사항 문서화와 프로젝트 관리
의사결정: 위계적, 경영진 주도
스킬셋: 프로젝트 관리, 문서 작성, 기획
현대의 제품 관리자
현재 역할: 제품 비전과 전략 주도자
초점: 고객 문제 해결과 비즈니스 가치 창출
의사결정: 데이터 기반, 협업적 접근
스킬셋: 분석, 실험, 커뮤니케이션, 리더십, 기술 이해

기업 규모별 PM 역할 차이
스타트업: 다재다능한 제너럴리스트, 여러 역할 담당
"많은 일을 동시에 하며 빠르게 움직이는 사람"
중견기업: 특정 제품/기능에 집중, 전문성 개발
"깊이와 넓이의 균형을 찾는 사람"
대기업: 전문화된 영역, 복잡한 이해관계자 관리
"영향력을 통해 일을 성사시키는 사람"

제품 관리의 실제 모습
제품은 지속적인 생명주기를 통해 진화한다
어떤 제품도 한 번에 완성되지 않으며, 지속적으로 개선되고 발전합니다
제품 관리자는 각 단계를 섬세하게 조율하는 지휘자
여러 팀과 자원을 조화롭게 이끌어 제품 비전을 실현합니다
다양한 이해관계자(엔지니어링, 디자인, 마케팅 등)와의 협업이 핵심
PM은 혼자 일하는 것이 아니라 다양한 전문가들과 협력합니다

제품 관리자의 실제 역할
고객 문제와 비즈니스 기회를 식별
회사의 비전, 전략, 자원에 맞는 해결책 조율
다양한 이해관계자 간 커뮤니케이션 촉진
데이터 기반 의사결정 주도

제품 관리에 대한 오해와 진실


오해: "PM은 CEO의 지시를 개발팀에 전달하는 메신저다"
진실: PM은 다양한 인사이트를 종합하여 제품 방향성을 주도한다
오해: "PM은 요구사항 문서만 작성하면 된다"
진실: PM은 지속적으로 이해관계자와 소통하며 제품을 발전시킨다
오해: "PM은 모든 결정의 최종 권한자다"
진실: PM은 협업과 합의를 통해 결정을 이끌어내는 촉진자 역할
오해: "좋은 아이디어만 있으면 좋은 제품이 만들어진다"
진실: 실행력, 검증, 반복개선이 아이디어만큼 중요하다

프로덕트 매니징 vs. 프로젝트 매니징
제품 관리: "무엇을" 만들지 결정 (제품 비전, 고객 가치)
프로젝트 관리: "어떻게" 만들지 실행 (일정, 자원, 범위)
“PM은 목적지를 정하는 네비게이터, 프로젝트 관리자는 목적지까지 차를 운전하는 드라이버”

프로덕트 매니저 vs 프로젝트 매니저
프로덕트 매니저(Product Manager)
초점: "무엇을" 만들지 결정 - 제품 비전과 전략
책임 영역: 제품의 성공, 고객 문제 해결, 비즈니스 가치 창출
결정 사항: 제품 기능, 로드맵, 우선순위
시간적 관점: 중장기적 제품 생명주기
핵심 질문: "고객에게 가장 가치 있는 것은 무엇인가?"
프로젝트 매니저(Project Manager)
초점: "어떻게" 만들지 관리 - 일정, 범위, 리소스
책임 영역: 프로젝트 실행, 마일스톤 달성, 리스크 관리
결정 사항: 작업 할당, 일정 조정, 이슈 해결
시간적 관점: 정해진 프로젝트 기간
핵심 질문: "어떻게 효율적으로 기한 내에 목표를 달성할 수 있는가?"

프로덕트 매니저 vs 프로그램 매니저
프로덕트 매니저(Product Manager)
범위: 단일 제품 또는 제품 라인
업무: 시장 조사, 제품 정의, 고객 니즈 파악
연관 관계: 개발팀, 디자인팀과 직접 협업
영향력: 제품 수준의 의사결정
예시: 모바일 앱의 기능과 방향성 결정
프로그램 매니저(Program Manager)
범위: 여러 관련 프로젝트 또는 제품 포트폴리오
업무: 전체 프로그램 조율, 의존성 관리, 전략적 조정
연관 관계: 여러 PM, 팀 리더들과 협업
영향력: 조직 레벨의 의사결정
예시: 모바일, 웹, 데스크톱 앱을 포함한 전체 서비스 생태계 관리

프로덕트 매니저 vs 프로덕트 오너
프로덕트 매니저(Product Manager)
맥락: 일반적인 제품 관리 역할 (방법론 중립적)
범위: 제품 전략, 로드맵, 비즈니스 연계
외부 초점: 시장, 고객, 비즈니스에 많은 시간 투자
위계: 종종 더 전략적인 위치에 있음
배경: 마케팅, 비즈니스, UX 등 다양한 배경
프로덕트 오너(Product Owner)
맥락: 스크럼/애자일 방법론에 특화된 역할
범위: 백로그 관리, 스토리 작성, 스프린트 계획
내부 초점: 개발팀과 많은 시간 보냄
위계: 종종 더 전술적이고 실행 중심적
배경: 기술적 배경이 더 일반적

대한민국 IT 업계에서의 역할 혼용
직함의 모호성: 'PM'이 세 가지 서로 다른 역할을 지칭하는 경우 빈번
실무적 혼합: 한 사람이 여러 역할을 동시에 수행하는 경우 많음
스타트업에서는 제품/프로젝트/프로그램 관리를 한 사람이 모두 담당하기도 함	
글로벌 vs 로컬 관행 차이: 해외 본사와 한국 지사 간 역할 정의 불일치
자격 요건의 불명확성: 구인 공고에서 역할과 책임이 혼합되어 명시되는 경우 많음
“실제 회사에서 해당 직책을 어떻게 바라보는지가 더 중요할 수 있다"

제품 삼각형(Product Triangle)
비즈니스(Business): 회사 목표, 수익 모델, 경쟁 우위
기술(Technology): 기술적 가능성, 인프라, 엔지니어링 역량
사용자 경험(User Experience): 고객 니즈, 사용성, 감성적 연결
제품 관리자의 역할 - 세 요소 간의 균형을 맞추는 조정자
어느 한 요소만 과도하게 강조하면 제품이 실패할 수 있다
각 단계마다 강조되는 요소가 다름
어느 한 측면에 치우치면 제품 실패 가능성 증가

제품-비즈니스 연계의 중요성
제품 결정은 비즈니스 목표에 기여해야 함
"멋진 제품이 아닌, 비즈니스를 성장시키는 제품"
제품 전략은 회사 전략의 실행 수단
제품은 회사가 가고자 하는 방향을 구체화한 것
제품 성공 = 비즈니스 성공의 정의와 일치해야 함

제품 결정과 비즈니스 KPI
성장 KPI: 사용자 수, 시장 점유율, 활성 사용자
제품 결정 예: 온보딩 간소화, 바이럴 기능 추가
수익 KPI: 매출, 전환율, 고객 생애 가치(LTV)
제품 결정 예: 프리미엄 기능, 결제 UI 최적화
유지 KPI: 이탈률, 참여도, 재방문율
제품 결정 예: 사용자 경험 개선, 참여 루프 강화

제품 개발 방법론의 진화
워터폴(Waterfall) 방식
특징: 선형적, 단계별 접근법
프로세스: 요구사항 → 설계 → 구현 → 검증 → 유지보수
장점: 명확한 계획, 예측 가능성, 포괄적 문서화
단점: 유연성 부족, 늦은 고객 피드백, 높은 리스크

린(Lean) 방식
기원: 토요타 제조 방식, 스티브 블랭크와 에릭 리스 적용
특징: 빠른 반복 주기, 학습 중심
프로세스: 만들기 → 측정 → 학습 → 반복
장점: 빠른 시장 검증, 낮은 리스크, 자원 효율성
단점: 장기 계획 부족 가능성, 체계적 접근 부족 가능성

현대적 제품 개발 방법론 - 하이브리드
워터폴과 린의 장점을 결합하기도
큰 그림을 계획하되, 실행은 반복적으로
방향은 명확하게, 전술은 유연하게
하이브리드 방식의 실무 적용
장기적 제품 비전과 로드맵 수립 (워터폴적 요소)
짧은 스프린트로 구현 및 검증 (린적 요소)
데이터에 기반한 방향 조정 (린적 요소)
명확한 마일스톤과 목표 설정 (워터폴적 요소)

애자일(Agile)이 제품 관리에 미친 영향
제품 관리의 전통적 접근법: 사전 계획, 완전한 사양서, 장기 로드맵
애자일의 영향:
점진적인 제품 진화
고객 피드백 중심의 개발
제품 책임자(Product Owner) 역할의 부상
지속적인 우선순위 재조정
"계획보다 변화에 대한 대응"이 중요해짐

디자인 씽킹(Design Thinking)의 통합
공감(Empathy) 단계의 중요성 증가: 사용자의 입장에서 문제를 깊이 이해하는 것이 첫 단계
문제 정의가 해결책 도출보다 우선시
프로토타입과 테스트의 일상화
다학제적 팀 협업 강화

데이터 중심 제품 관리의 부상
과거: 직관과 경험에 의존
현재:
A/B 테스트 기반 의사결정
사용자 행동 데이터 분석
성장 해킹(Growth Hacking) 기법 도입
제품 분석 도구의 고도화
"측정할 수 없으면 개선할 수 없다"는 원칙 확산

지속적 통합/배포(CI/CD)의 영향
출시 주기 단축 (연간 → 분기별 → 월간 → 주간 → 일간)
피처 플래그(Feature Flag)를 통한 점진적 롤아웃
제품 관리자의 기술적 이해 중요성 증가
지속적 실험 문화

제품 개발 생명주기란?
아이디어에서 출시, 성장, 그리고 때로는 단종까지 제품이 거치는 모든 단계
제품 관리자가 제품의 성공적인 개발과 시장 출시를 위해 따르는 체계적 프로세스
제품의 가치를 극대화하기 위한 구조화된 접근법

제품 생명 개발 주기 5단계
올바른 기회 찾기 및 계획하기: 문제 정의, 기회 평가
솔루션 설계하기: 사용자 중심 솔루션 개발
솔루션 구축하기: 개발 과정 관리
솔루션 공유하기: 출시 및 마케팅
솔루션 평가하기: 성과 측정 및 다음 단계 계획

제품 유형별 생명주기 차이
소프트웨어 제품: 빠른 반복, 지속적 업데이트 가능
하드웨어 제품: 더 긴 계획 단계, 출시 후 변경 제한적
서비스 제품: 고객 경험과 서비스 디자인 중심
복합 제품: 여러 요소의 생명주기 조율 필요

소프트웨어 vs. 하드웨어 제품 관리
소프트웨어 제품 관리
빠른 반복 주기 (일/주 단위)
낮은 출시 비용
사후 업데이트 용이
린/애자일 방식 적합
하드웨어 제품 관리
긴 개발 주기 (월/년 단위)
높은 생산 비용
출시 후 변경 어려움
워터폴에 가까운 방식 필요

실제 적용 시 중요 포인트
단계는 개념적으로 구분되지만 실제로는 중첩됨
실무에서는 명확한 경계보다 유연한 흐름으로 진행됨
반복적 접근: 각 단계에서 새로운 정보가 이전 단계에 영향
피드백 루프를 통해 지속적으로 개선
PM은 전체 과정의 일관성 유지 담당
다양한 팀과 활동 사이의 연결고리 역할

Break Time

1. 올바른 기회 찾기 및 계획하기 - 회사의 전략적 맥락 이해하기
회사 맥락의 중요성
모든 제품 결정은 회사 맥락 내에서 이루어짐
맥락 이해 없는 제품 개발은 방향 상실 위험
파악해야 할 핵심 요소들
회사 비전과 미션: 왜 우리가 존재하는가?
타겟 고객: 누구를 위한 제품인가?
핵심 역량: 우리가 잘하는 것은 무엇인가?
경쟁 환경: 시장에서 우리의 위치는?
비즈니스 모델: 어떻게 수익을 창출하는가?

1. 올바른 기회 찾기 및 계획하기 - 회사 맥락 분석 프레임워크
SWOT 분석 템플릿
비즈니스 모델 캔버스 작성법
경쟁사 분석 매트릭스
등등..

1. 올바른 기회 찾기 및 계획하기 - 회사 목표 이해하기
회사 목표의 세 가지 유형
성장(Growth): 사용자 수, 시장 점유율 확대
수익(Revenue): 매출 증대, 수익성 개선
고객 만족(Customer Satisfaction): 충성도, NPS 향상
목표별 제품 전략 차이
성장 목표 시: 유입 장벽 낮추기, 확장성 강화(사례: 초기 페이스북의 대학생 타겟팅)
수익 목표 시: 수익화 기능, 전환율 최적화(사례: 프리미엄 기능, 구독 모델 도입)
고객 만족 목표 시: 핵심 사용자 경험 개선(사례: 넷플릭스의 개인화 추천 알고리즘)

1. 올바른 기회 찾기 및 계획하기 - 기회 가설 수립하기
기회 가설이란?
다음에 집중할 가치 있는 제품/기능에 대한 가설
사용자 문제와 비즈니스 가치를 연결하는 다리
기회 가설의 원천
사용자 데이터 분석: 행동 패턴, 이탈 지점
고객 피드백: 직접/간접 요청, 인터뷰, 설문
시장 트렌드: 경쟁사 동향, 산업 변화
내부 이해관계자: 영업팀, 고객 지원팀 인사이트
제품 비전: 장기적 방향성과의 일치

1. 올바른 기회 찾기 및 계획하기 - 효과적인 기회 가설 작성법
문제 중심 접근: 기능이 아닌 사용자 문제 정의
가설 형식: "우리는 [이 문제]가 [이 고객]에게 중요하며, [이 해결책]이 [이 비즈니스 가치]를 제공할 것이라고 믿는다"
검증 가능한 형태로 작성

1. 올바른 기회 찾기 및 계획하기 - 기회 가설 검증하기
검증의 중요성
리소스 투입 전 아이디어 검증으로 실패 비용 최소화
가정이 아닌 증거에 기반한 의사결정
가설 검증 방법
정성적 방법: 고객 인터뷰 (5-8명으로 시작), 사용성 테스트, 카드 소팅, 경쟁 제품 분석
정량적 방법: A/B 테스트, 사용자 행동 데이터 분석, 컨셉 테스트
가설 검증 계획 수립
검증 질문 작성하기
적절한 방법론 선택하기
성공 기준 정의하기

1. 올바른 기회 찾기 및 계획하기 - 최소 기능 제품(MVP) 정의하기
MVP는 '최소한의 제품'이 아닌 '학습을 위한 최소한의 제품'
목적은 미완성 제품을 출시하는 것이 아니라 효율적인 학습
목적: 최소한의 노력으로 최대한의 학습 얻기
핵심 가치 제안을 검증할 수 있는 가장 작은 제품 버전

1. 올바른 기회 찾기 및 계획하기 - MVP 정의 프레임워크
핵심 가치 명확화: 제품이 해결하는 주요 문제 하나
핵심 사용자 여정 매핑: 가치 전달을 위한 최소 단계
기능 분류: 필수(Must) / 중요(Should) / 있으면 좋은(Nice-to-have)
MoSCoW 방법론: Must have, Should have, Could have, Won't have
기술적 복잡성 평가: 각 기능의 구현 난이도

1. 올바른 기회 찾기 및 계획하기 - 범위 설정(Scoping)과 요구사항 정의
효과적인 범위 설정의 중요성
명확한 범위 = 명확한 기대치 = 성공적인 실행
모호한 범위는 일정 지연, 기능 부풀림, 리소스 낭비 초래
범위 설정 요소
대상 고객: 누구를 위한 제품인가? (페르소나 정의)
사용 컨텍스트: 어떤 상황에서 사용되는가?
기능적 요구사항: 제품이 할 수 있는 것
비기능적 요구사항: 성능, 보안, 확장성 등
제약사항: 시간, 예산, 기술적 한계

1. 올바른 기회 찾기 및 계획하기 - PRD(Product Requirements Document)
목적: 팀 전체가 제품 비전을 공유하는 소통 도구
내용: 문제 정의, 목표, 가정, 범위, 요구사항, 성공 지표
형식: 간결하고 명확하게, 살아있는 문서로 취급

1. 올바른 기회 찾기 및 계획하기 - 성공 지표 설정하기
성공 지표의 중요성
"측정할 수 없으면 개선할 수 없다"
목표 달성 여부 판단의 객관적 기준
팀 정렬과 의사소통 도구
효과적인 지표의 특성 (SMART)
구체적(Specific): 명확하게 정의됨
측정 가능(Measurable): 데이터로 추적 가능
달성 가능(Achievable): 현실적인 목표
관련성(Relevant): 비즈니스 목표와 연결됨
시간 제한(Time-bound): 기한이 있음

1. 올바른 기회 찾기 및 계획하기 - AARRR (해적 지표)


획득(Acquisition): 사용자가 제품을 발견하는 방법
활성화(Activation): 첫 긍정적 경험
유지(Retention): 반복 사용
추천(Referral): 다른 사용자에게 추천
수익(Revenue): 수익화

1. 올바른 기회 찾기 및 계획하기 - AARRR (해적 지표)


획득(Acquisition): 사용자가 제품을 발견하는 방법
활성화(Activation): 첫 긍정적 경험
유지(Retention): 반복 사용
추천(Referral): 다른 사용자에게 추천
수익(Revenue): 수익화

2. 솔루션 설계하기 
디자인 단계의 의미
검증된 문제에 대한 구체적 해결책 개발
PM, 디자인팀, 엔지니어링팀의 협업 단계
제품 삼각형에서 사용자 경험(UX) 요소 강조
설계 단계에서 PM의 역할
디자인팀과 사용자 리서치 협업
엔지니어링팀과 기술적 실현 가능성 확인
비즈니스 목표와 사용자 니즈 균형 조율
디자인 결정을 위한 데이터 및 인사이트 제공

2. 솔루션 설계하기 - 디자인의 다양한 측면
정보 아키텍처: 정보의 구조와 순서
와이어프레임: 페이지/화면 구성과 요소 배치
시각적 디자인: 색상, 타이포그래피, 시각적 계층
인터랙션 디자인: 사용자가 제품과 상호작용하는 방식

2. 솔루션 설계하기 - 사용자 중심 설계 프로세스
사용자 중심 설계의 핵심 원칙
사용자의 니즈, 원하는 것, 제약사항에 중점
데이터와 리서치에 기반한 디자인 결정
반복적 개선 및 지속적 검증

2. 솔루션 설계하기 - 사용자 중심 설계 프로세스
사용자 리서치: 사용자 행동, 니즈, 동기 이해
페르소나 개발: 주요 사용자 유형 정의
사용자 여정 매핑: 사용자 경험의 단계별 흐름 시각화
아이디어 발상: 문제 해결을 위한 다양한 접근법 탐색
프로토타이핑: 아이디어의 구체화 및 시각화
사용성 테스트: 실제 사용자와 함께 해결책 검증
반복: 피드백 기반 개선

2. 솔루션 설계하기 - 프로토타이핑의 중요성
프로토타이핑이란?
완성된 제품 전에 아이디어를 시각화하고 테스트하는 과정
저비용으로 빠른 피드백을 얻는 방법
"실패하더라도 빨리, 저렴하게 실패하자"
프로토타이핑 도구
페이퍼 프로토타이핑: 종이, 펜, 포스트잇
디지털 도구: Figma, Sketch, Adobe XD, InVision
코드 기반: HTML/CSS/JS 프로토타입

2. 솔루션 설계하기 - 프로토타입의 종류
로우 파이(Low Fidelity, Lo-Fi): 종이 프로토타입, 스케치
장점: 빠른 제작, 쉬운 변경, 아이디어 초기 검증
용도: 초기 컨셉 테스트, 다양한 아이디어 탐색
미드 파이(Medium Fidelity, Mid-Fi): 와이어프레임, 클릭 가능한 목업
장점: 실제 흐름 테스트, 상대적으로 빠른 제작
용도: 정보 구조, 기능 흐름 검증
하이 파이(High Fidelity, Hi-Fi): 실제와 유사한 디자인, 인터랙션
장점: 실제 제품과 유사한 경험 제공
용도: 최종 디자인 검증, 이해관계자 승인

2. 솔루션 설계하기 - 사용성 테스트 실시하기
사용성 테스트의 목적
실제 사용자가 제품을 어떻게 사용하는지 관찰
디자인 가정 검증
개선이 필요한 부분 식별

완벽한 프로토타입이 필요하지 않음 - 초기에도 테스트 가능
"왜" 그렇게 생각하는지 질문하기
사용자 행동에 집중하고, 그들의 의견이나 제안에 너무 의존하지 않기
이해관계자를 관찰자로 참여시켜 공감대 형성

2. 솔루션 설계하기 - 사용성 테스트 방법론
테스트 계획 수립: 목표, 참가자 프로필, 태스크 정의
참가자 모집: 타겟 사용자 특성에 맞는 5-8명 선정
테스트 진행:
명확한 태스크 제시
중립적 태도 유지
참가자의 생각을 말로 표현하도록 독려 (Think Aloud)
결과 분석: 공통 패턴 식별, 심각성 평가
개선 계획 수립: 발견된 문제에 대한 해결책 제안

3. 솔루션 구축하기 - 개발 방법론
소프트웨어 개발 방법론 개요
애자일(Agile): 반복적, 점진적 개발
스크럼(Scrum): 애자일의 구체적 프레임워크
칸반(Kanban): 시각적 워크플로우 관리
익스트림 프로그래밍(XP): 기술적 우수성 강조
PM(PO)의 역할
제품 백로그 관리
우선순위 설정
스토리 구체화
이해관계자와 개발팀 연결
제품 비전 전달

3. 솔루션 구축하기 - 엔지니어링팀 이해하기
엔지니어의 사고방식과 가치 (코드 품질, 기술적 도전)
엔지니어는 기술적 우아함과 코드 품질을 중요시함
기술적 제약과 가능성에 대한 이해
모든 것이 기술적으로 가능하지만, 모든 것이 실용적이진 않음
엔지니어링 문화와 용어 익히기
소통의 장벽을 낮추기 위해 기본적인 기술 용어 이해 필요

3. 솔루션 구축하기 - 효과적인 협업 전략
명확한 문제 정의: 해결책이 아닌 문제를 전달
"이렇게 구현해"가 아닌 "이 문제를 해결해야 해"라고 접근
선택의 자유: 구현 방법에 대한 자율성 부여
엔지니어의 전문성을 존중하고 활용
기술적 부채 관리: 단기 해결책과 장기 지속성 균형
때로는 완벽하지 않은 해결책을 수용하되, 나중에 개선할 계획 수립
타임박싱: 완벽함보다 진전을 우선시
버퍼 설정: 예상치 못한 문제를 위한 시간 확보

3. 솔루션 구축하기 - 개발 과정 관리하기
백로그 관리
우선순위 기준: 비즈니스 가치, 기술적 위험, 의존성
백로그 정리(Grooming): 스토리 구체화, 추정, 우선순위 조정
기능 의존성 관리: 병목 현상 방지
반복적 개발 사이클 관리
마일스톤 설정과 추적
진행 상황 가시화
장애물 제거

3. 솔루션 구축하기 - 개발 과정 관리하기
테스트 및 품질 관리
단위 테스트, 통합 테스트, 시스템 테스트
버그 우선순위 지정
품질 기준 설정
기술적 부채 관리
기술적 부채란? 빠른 구현을 위한 단기적 타협
부채 식별 및 문서화
상환 계획: 언제, 어떻게 해결할 것인가

4. 솔루션 공유하기 - 제품 마케팅의 중요성
"만들면 사람들이 온다"는 신화 깨기
제품 가치의 효과적 커뮤니케이션이 핵심
제품 개발만큼 중요한 마케팅 단계
제품 마케팅 시작 시점
제품 개발 초기부터 마케팅 관점 통합
가치 제안(Value Proposition) 명확화
타겟 고객 세그먼트 정의

4. 솔루션 공유하기 - 효과적인 메시징 전략
제품 메시징의 핵심
기능(Features)이 아닌 혜택(Benefits) 중심
고객 문제와 해결책 연결
감성적 연결 구축
메시징 프레임워크
문제 진술: 고객이 겪는 문제 명확화
가치 제안: 제품이 제공하는 핵심 가치
차별화 포인트: 경쟁사와의 차별점
증거 포인트: 주장을 뒷받침하는 데이터/사례
행동 유도: 고객이 취해야 할 다음 단계

4. 솔루션 공유하기 - 사례
CNN 360° VR 비디오
기능 중심 메시지: "라이브 360° VR 비디오 스트리밍"
혜택 중심 메시지: "우리 리포터와 함께 현장에 있는 것 같은 경험"
왜 후자가 더 효과적인가?
“고객이 제품을 통해 문제를 해결할 수 있다는 기대를 생생하게 전달할 수 있어야 한다"

4. 솔루션 공유하기 - 출시 전략 수립하기
출시 유형 이해하기
빅뱅 출시: 모든 고객에게 동시에 공개
단계적 출시: 점진적으로 사용자 확대
소프트 런칭: 제한된 시장에서 테스트
베타 출시: 초기 사용자 피드백 수집
출시 계획 요소
타임라인: 주요 이정표 및 준비 활동
이해관계자: 마케팅, 영업, 고객 지원팀 준비
리스크 관리: 잠재적 문제 및 대응 계획
성공 지표: 출시 성공을 평가할 기준

4. 솔루션 공유하기 - 출시 체크리스트
제품 준비: QA 완료, 성능 테스트
문서: 사용자 가이드, FAQ, 지원 문서
내부 준비: 영업팀 교육, 고객 지원팀 브리핑
마케팅 자료: 웹사이트, 보도 자료, 소셜 미디어
법적 검토: 개인정보 정책, 이용 약관

4. 솔루션 공유하기 - 다양한 출시 채널 활용
출시 채널 옵션
웹사이트 & 블로그: 상세 정보 및 심층 콘텐츠
이메일 마케팅: 기존 고객 및 잠재 고객 직접 접근
소셜 미디어: 넓은 도달 범위, 바이럴 가능성
PR & 미디어: 신뢰성 구축, 넓은 노출
제품 내 공지: 기존 사용자 타겟팅
이벤트 & 웨비나: 상호작용 기회

4. 솔루션 공유하기 - 다양한 출시 채널 활용
채널 선택 전략
타겟 고객의 활동 채널 식별
제품 복잡성에 맞는 채널 선택
채널 간 일관된 메시징 유지
각 채널의 특성에 맞게 콘텐츠 최적화
성공적인 출시 사례 분석
다중 채널 접근법으로 성공한 제품 출시 예시
각 채널별 효과 분석
핵심 성공 요인 및 교훈

5. 솔루션 평가하기 - 성과 측정
성과 측정의 중요성
제품 개발 사이클의 완성
투자 대비 수익(ROI) 증명
다음 단계 결정을 위한 인사이트 제공
주요 평가 영역
사용자 지표: 사용량, 활성 사용자, 유지율
비즈니스 지표: 수익, 전환율, 고객 획득 비용
제품 품질 지표: 버그, 충돌율, 성능
고객 만족 지표: NPS, CSAT, 리뷰

5. 솔루션 평가하기 - 성과 측정
데이터 수집 방법
제품 분석(Analytics) 도구
사용자 피드백 및 설문조사
고객 인터뷰 및 사용성 테스트
A/B 테스트 결과
데이터 분석
상관관계와 인과관계 구분하기
통계적 유의성 이해하기
숫자 너머의 맥락 파악하기

5. 솔루션 평가하기 - 팀 회고와 프로세스 개선
팀 회고의 목적
성공 요인과 개선 영역 식별
팀 협업 강화
지속적인 프로세스 개선
효과적인 회고 진행법
데이터 수집: 타임라인 작성, 주요 이벤트 식별
분석: 잘된 점, 개선할 점, 배운 점 구분
액션 계획: 구체적인 개선 조치 합의
후속 조치: 개선 사항 구현 및 결과 추적

5. 솔루션 평가하기 - 팀 회고와 프로세스 개선
주요 질문들
무엇이 예상대로 진행되었나?
무엇이 예상과 달랐나?
팀의 생산성을 높인/낮춘 요소는?
고객에게 더 나은 가치를 제공하려면 어떻게 해야 하나?
다음에는 무엇을 다르게 할 것인가?
회고 문화 구축하기
심리적 안전성 확보: 비난이 아닌 학습 중심
정기적인 회고 일정 수립
액션 아이템 책임감 부여

5. 솔루션 평가하기 - 다음 단계 결정하기
1. 반복(Iterate): 현재 제품/기능 개선
지표가 유망하지만 최적화 필요
고객 피드백에 기반한 개선점 명확
예: 넷플릭스의 추천 알고리즘 지속적 개선
2. 확장(Expand): 새로운 기능/시장으로 확장
핵심 가치 검증됨
더 많은 고객 세그먼트 또는 니즈 타겟팅
예: 아마존이 전자 상거래에서 클라우드 서비스(AWS)로 확장

5. 솔루션 평가하기 - 다음 단계 결정하기
3. 피벗(Pivot): 전략적 방향 전환
핵심 가설이 검증되지 않음
새로운 접근법 필요
예: 슬랙이 게임 회사에서 커뮤니케이션 도구로 피벗
4. 종료(Kill): 제품/기능 중단
비즈니스 가치 증명 실패
리소스를 더 가치 있는 기회에 재배치
예: 구글이 구글+를 종료한 결정

전체 프로세스 사례
가상 제품 사례: 식료품 배달 앱 개발
1단계: 기회 찾기 및 계획
시장 조사: 바쁜 전문직 타겟, 경쟁사 분석
기회 가설: "신선한 식품에 접근하기 어려운 바쁜 전문직들에게 빠른 식료품 배달 서비스 필요"
검증: 고객 인터뷰, 설문조사, 경쟁사 분석
MVP 정의: 기본 상품 검색, 주문, 배달 추적
2단계: 솔루션 설계
사용자 여정 매핑: 발견 → 검색 → 주문 → 배달 → 재주문
와이어프레임 및 프로토타입 제작
사용성 테스트 및 디자인 반복

전체 프로세스 사례
가상 제품 사례: 식료품 배달 앱 개발
1단계: 기회 찾기 및 계획
시장 조사: 바쁜 전문직 타겟, 경쟁사 분석
기회 가설: "신선한 식품에 접근하기 어려운 바쁜 전문직들에게 빠른 식료품 배달 서비스 필요"
검증: 고객 인터뷰, 설문조사, 경쟁사 분석
MVP 정의: 기본 상품 검색, 주문, 배달 추적
2단계: 솔루션 설계
사용자 여정 매핑: 발견 → 검색 → 주문 → 배달 → 재주문
와이어프레임 및 프로토타입 제작
사용성 테스트 및 디자인 반복

전체 프로세스 사례
3단계: 해결책 구축
스크럼 방법론 적용: 2주 스프린트
백로그 우선순위: 핵심 기능 우선
개발 중 피드백: 내부 베타 테스트
4단계: 해결책 공유
제한된 지역에서 소프트 런칭
마케팅 메시지: "바쁜 당신을 위한 30분 식료품 배달"
출시 채널: 소셜 미디어, 이메일, 지역 이벤트
5단계: 해결책 평가
지표 분석: 주문량, 재주문율, 평균 주문 금액
고객 피드백 수집 및 분석
다음 단계: 배달 시간 최적화에 집중, 새로운 지역으로 확장

전 과정을 전부 직접 수행하지는 않지만전 과정 전부 이해하고 책임감있게 관리해야 한다

그룹 연구
팀원들이 모여 탐구해보고 싶은 기업의 PM 공고를 하나 선택해 봅니다.
공고에 작성되어 있는 직무 및 역량등을 파악하여, 해당 기업에서 PM에게 어떤 역할을 기대하고 있는지 학습 내용에 기반하여 유추해 봅니다.
공고에 작성되어 있는 직무 및 역량등을 파악하여, 해당 기업의 제품 개발 생명 주기는 어떤식으로 돌아가는지 특징을 분석하고 유추해 봅니다.
파악이 되는것과 파악이 되지 않는 것을 구분하여 해당 기업의 제품 개발 프로세스에 대해 정리해 봅니다.

질의응답 & 토론

사전 질문(15분)
제품 개발의 과정에서 프로덕트 매니저가 주로 수행해야 하는 역할은 무엇일까요? 가능한 아는대로 적어 정리해 봅니다.

제품 개발의 과정은 전반적으로 어떻게 진행될까요? 아는대로 적어 정리해 봅니다.


수고하셨습니다
