기술 동향 및 업계 인사이트(2)
AI 서비스의 이해

사전 질문(15분)
SW 개발자와 AI 개발자와의 소통은 어떤 차이가 있을까요?

AI 기반 서비스를 만들기 위해 PM은 어디까지 이해하고 관여할 수 있어야 할까요?

사전 질문 토론
SW 개발자와 AI 개발자와의 소통은 어떤 차이가 있을까요?
SW 개발자는 명확한 로직과 기능 구현을 중시하고, AI 개발자는 불확실한 결과와 반복 실험 중심의 접근을 한다.
기술 언어, 문제 해결 방식, 기대 기준이 다르기 때문에 서로의 관점을 이해하며 조율하는 능력이 중요하다.
SW는 정답을 만드는 일이지만, AI는 답을 찾아가는 일이라는 차이를 체감하고 있다.
그래서 소통할 때는 논리와 확률, 명확성과 모호성 사이의 간극을 인지하고 접근하는 태도가 필요하다.
AI 기반 서비스를 만들기 위해 PM은 어디까지 이해하고 관여할 수 있어야 할까요?
PM은 AI 모델의 원리까지는 몰라도, 데이터의 의미, 성능 지표, 적용 가능성과 한계를 파악할 수 있어야 한다.
문제 정의부터 모델 적용까지 전체 흐름을 조율하고, 실무 간극을 메우는 통역자 역할을 해야 한다.
AI가 해결할 문제를 명확히 하고, 기술 선택과 성과 기준에 대해 개발자와 같은 언어로 이야기할 수 있어야 한다.
기술보다 중요한 건 고객 문제를 중심에 두고 비즈니스 가치를 설계하는 사고방식이라고 생각한다.

Case: AI 프로젝트와 의사소통
국가사업 프로젝트에 새로운 AI 모델을 출시하기 위해 AI 엔지니어와 협업
전화 음성 데이터에서 언어를 인식해 이를 기반으로 새로운 서비스를 제안하는 과정
두 방향에서 소통의 어려움
PM: 초기 제품인 만큼 성능보다는 가능성을 보여주는것이 중요한데 이를 조율하기가 어렵다
AI 개발자: 기술적으로 구현이 가능하고 불가능한 범위가 있는데 이를 설명하기가 어렵다
오랜 기간동안 기술적인 이야기를 나누고 간극을 줄이는 것이 필요
이 과정에서 다양한 AI 관련 기술 용어들을 활용해 소통을 해야만 했다

결국 사업은 잘 되었을까?
워낙 어려운 기술에 도전하는 것이라 지원자가 많지 않았음
경쟁자보다 더 나은 서비스 가치, 노력끝에 가능성은 보여준 기술적 성과
좋은 의사소통으로 프로젝트에 최종 선정되어 지원금을 받을 수 있었다

AI 관련 서비스를 만들기 위해서는 AI에 대한 소통 가능한 지식이 필요하다
AI는 상당히 어려운 분야, 하지만 인간의 문제를 해결하기 위해 등장한 분야
“PM에게는 인간, 고객, 비즈니스, 서비스를 중심으로 AI를 해석할 수 있는 능력이 필요하다”

인공지능(Artificial Intelligence, AI)

인간의 지능적인 행동(이해, 판단, 학습, 추론 등)을 컴퓨터가 모방하도록 만드는 기술이다.
AI의 주요 특징
데이터 기반의 의사결정 또는 행동 수행
스스로 규칙을 학습하거나 적용할 수 있음
사람의 지적 능력을 수학적, 통계적 방식으로 구현
AI의 오해
AI는 인간처럼 생각하거나 느끼지 않는다.
자율성을 가진 존재가 아니라, 입력된 구조 안에서 작동한다.
대부분의 AI는 특정 작업만 수행하는 ‘좁은 AI’이다.

AI 역량의 실용적 분류
인식(Perception): 데이터에서 패턴과 특성 감지
시각 인식: 이미지와 비디오에서 객체, 장면, 활동 식별
음성 인식: 음성을 텍스트로 변환, 화자 식별
텍스트 인식: 언어 이해, 감성 분석, 주제 분류
예측(Prediction): 과거 데이터 기반 미래 결과 예상
행동 예측: 사용자의 다음 행동, 구매 가능성 예측
추세 예측: 매출, 수요, 사용 패턴의 미래 동향 예측
위험 예측: 이탈 위험, 사기 가능성, 시스템 장애 예측
생성(Generation): 새로운 콘텐츠와 아이디어 창출
콘텐츠 생성: 텍스트, 이미지, 음악 생성
대안 제시: 다양한 디자인, 전략, 경로 옵션 생성
시뮬레이션: 가상 시나리오 생성 및 결과 예측
최적화(Optimization): 복잡한 제약 조건 속에서 최적 해결책 도출
자원 할당: 인력, 재고, 시간 등의 효율적 배분
경로 계획: 최적 경로, 일정, 순서 결정
가격 최적화: 수요, 경쟁, 비용 기반 최적 가격 설정

AI의 발전 역사와 중요 변곡점
1950-1960년대: AI의 태동
1950: 앨런 튜링의 '튜링 테스트' 제안
1956: 다트머스 회의에서 '인공지능'이라는 용어 공식 사용
초기 성과: 체커 게임 프로그램, 간단한 문제 해결 프로그램
1970-1980년대: 첫 번째 AI 겨울과 지식 기반 시스템
초기의 과도한 낙관론 이후 성과 부진
전문가 시스템(Expert Systems)의 등장과 발전, 규칙 기반 추론 시스템의 상업적 활용
1990-2000년대 초반: 통계적 방법론과 기계학습
통계적 기계학습 방법론의 발전, 데이터 기반 접근법의 증가
IBM의 딥블루가 체스 챔피언 가리 카스파로프 격파(1997)
2010년대 이후: 딥러닝 혁명
2012: AlexNet의 이미지넷 대회 우승으로 딥러닝 혁명 시작
2016: AlphaGo가 이세돌 9단 격파
2020년대: GPT와 같은 대규모 언어 모델의 등장

기계는 어떻게 '생각'하는가
AI는 의식이나 자아가 없다
AI의 '사고'는 본질적으로 통계적 패턴 인식과 규칙 적용에 기반
이미지 분류의 경우: "이 이미지는 강아지일 확률 85%, 고양이일 확률 12%, 여우일 확률 3%입니다."
텍스트 분류의 경우: "이 리뷰는 긍정적일 확률 73%, 중립적일 확률 22%, 부정적일 확률 5%입니다."
'확신'을 가지고 판단하는 것이 아니라, 데이터를 기반으로 가장 가능성 높은 답변을 제시
"AI는 절대적 진실을 말하는 것이 아니라, 데이터에 기반한 가장 그럴듯한 답변을 제시합니다."

인간 학습과의 비교로 이해하기
아이가 '고양이'를 배울 때:
몇 번의 경험으로 고양이를 인식합니다
고양이의 본질적 특성을 파악합니다
"푸르릉" 소리나 움직임까지 고양이의 개념에 통합합니다
AI는 어떻게 배울까:
수천, 수만 개의 고양이 사진이 필요합니다
픽셀 패턴을 통계적으로 분석합니다
명시적인 개념 이해 없이 패턴만 학습합니다

AI의 구성 요소와 아키텍처
1. 데이터: 인간이 경험을 통해 배우듯, AI는 데이터를 통해 세상을 이해합니다.
좋은 데이터의 조건:
충분한 양(Volume): 복잡한 패턴을 학습하기 위한 데이터 규모
대표성(Representativeness): 실제 사용 환경의 다양한 케이스 포함
품질(Quality): 정확하고 일관된 데이터
적절한 형태(Format): 목표 작업에 적합한 데이터 구조
데이터 관련 핵심 질문:
가용성: 현재 어떤 데이터를 보유하고 있으며, 추가로 어떤 데이터가 필요한가?
접근성: 데이터 수집과 사용에 법적, 기술적, 윤리적 장벽은 없는가?
품질: 데이터의 정확성, 완전성, 일관성을 어떻게 보장할 것인가?
편향: 데이터에 어떤 편향이 있을 수 있으며, 이를 어떻게 완화할 것인가?
진화: 시간이 지남에 따라 데이터 특성이 변할 경우 어떻게 대응할 것인가?

AI의 구성 요소와 아키텍처
2. 알고리즘(모델): 알고리즘은 데이터에서 패턴을 학습하고 새로운 상황에 적용하는 방법을 정의합니다. 
주요 알고리즘 유형:
지도학습(Supervised Learning): 입력과 원하는 출력이 쌍으로 제공된 데이터로 학습
비지도학습(Unsupervised Learning): 레이블 없는 데이터에서 패턴과 구조 발견
강화학습(Reinforcement Learning): 환경과 상호작용하며 보상을 최대화하는 행동 학습
알고리즘 선택 시 고려사항:
문제 유형: 예측, 분류, 군집화 등 해결하려는 문제의 성격
데이터 특성: 데이터 양, 차원, 노이즈, 분포 등
해석 가능성 요구: 모델 결정의 이유 설명 필요성
계산 리소스: 학습 및 추론에 필요한 컴퓨팅 자원
정확도 vs 속도: 필요한 정확도 수준과 응답 시간 요구사항
복잡성 관리: 유지보수 및 업데이트 용이성

AI의 구성 요소와 아키텍처
3. 인프라: AI 시스템의 성능, 확장성, 비용 효율성을 결정
주요 인프라 구성 요소:
컴퓨팅 자원: 모델 학습 및 추론에 필요한 처리 능력
데이터 파이프라인: 데이터 수집, 전처리, 저장, 접근을 위한 시스템
모델 개발 환경: 모델 설계, 훈련, 평가, 개선을 위한 도구
배포 및 모니터링 시스템: 모델을 실제 환경에 적용하고 성능 관리
피드백 루프: 실제 데이터로 모델 재훈련 메커니즘
인프라 관련 핵심 질문:
성능 요구사항: 얼마나 빠른 응답 시간이 필요한가? 동시에 몇 개의 요청을 처리해야 하는가?
확장성: 사용자 증가에 따라 어떻게 시스템을 확장할 것인가?
신뢰성: 시스템 장애나 성능 저하에 어떻게 대응할 것인가?
비용 효율성: 개발 및 운영 비용을 어떻게 최적화할 것인가?
유지보수: 모델과 인프라를 어떻게 효율적으로 업데이트하고 관리할 것인가?

머신러닝의 기본 원리
명시적인 프로그래밍 없이 데이터로부터 학습하여 성능을 향상시키는 기술
전통적 프로그래밍: 규칙 + 데이터 → 프로그램 → 결과
사람이 규칙을 정의한다
(예: if 온도 > 30도 → 에어컨 켜기)
프로그램은 이 규칙을 따라 실행될 뿐이다
머신러닝: 데이터 + 결과 → 학습 알고리즘 → 규칙(모델)
규칙을 알 수 없거나 복잡할 때,
‘입력 데이터’와 ‘정답 결과’를 함께 주면
컴퓨터가 반복 학습을 통해 규칙을 스스로 찾아낸다

지도 학습(Supervised Learning)
예시를 통해 배우기: 입력(X)과 원하는 출력(Y)이 쌍으로 제공되는 데이터로부터 학습
인간 교육 비유: 명확한 정답이 있는 문제집으로 공부하기
지도학습의 작동 방식
레이블이 있는 훈련 데이터 준비 (예: 이메일 텍스트 + 스팸 여부)
모델이 입력에서 출력을 예측하도록 훈련
실제 레이블과 예측 간의 오차를 최소화하도록 모델 조정
새로운 데이터에 모델 적용하여 예측 생성
지도학습의 실제 적용 사례
이메일 스팸 필터링: 스팸 메일과 정상 메일 구분
신용 평가: 대출 상환 가능성 예측
의료 진단: 의료 영상에서 질병 감지
감성 분석: 텍스트의 긍정/부정 감정 분석
수요 예측: 제품 판매량 예측

비지도 학습(Unsupervised Learning)
레이블 없는 데이터에서 숨겨진 구조와 패턴을 찾아내기
인간 교육 비유: 정답 없이 패턴과 관계를 스스로 발견하기
비지도학습의 작동 방식
레이블 없는 데이터 수집 (예: 고객 구매 기록)
데이터의 내재적 구조를 찾는 알고리즘 적용
발견된 패턴을 활용하여 인사이트 도출 또는 다운스트림 작업 수행
비지도학습의 실제 적용 사례
고객 세분화: 유사한 행동 패턴을 가진 고객 그룹 식별
추천 시스템: 사용자 행동 기반 연관 상품 추천
이상 거래 탐지: 신용카드 사기 감지
토픽 모델링: 문서 컬렉션에서 주요 주제 식별
이미지 압축: 중요한 특성만 보존하면서 이미지 크기 축소

강화 학습(Reinforcement Learning)
에이전트가 환경과 상호작용하며 보상을 최대화하는 행동 정책을 학습
인간 교육 비유: 시행착오를 통해 배우기, 좋은 결과는 강화하고 나쁜 결과는 피하기
강화학습의 작동 방식
에이전트가 환경에서 상태를 관찰
현재 정책에 따라 행동 선택
환경으로부터 보상 수신 및 새로운 상태로 전이
보상을 최대화하도록 정책 업데이트
강화학습의 실제 적용 사례
게임 AI: AlphaGo, Atari 게임 등에서 인간 수준 이상 성능 달성
로봇 제어: 물리적 환경에서 로봇의 운동 제어
자원 관리: 데이터 센터 에너지 최적화
개인화된 추천: 사용자 피드백을 통한 추천 시스템 최적화
자율주행: 복잡한 교통 환경에서 의사결정

딥러닝과 신경망: 뇌에서 영감을 얻다
인간 뇌의 신경망 구조에서 영감을 받은 머신러닝의 발전된 형태
복잡한 패턴 인식과 특성 추출에 탁월한 성능을 보임


딥러닝과 신경망: 뇌에서 영감을 얻다
뉴런(노드): 입력을 받아 처리하는 기본 계산 단위
층(Layer): 여러 뉴런의 집합
초기 층: 단순한 패턴(선, 모서리)
중간 층: 더 복잡한 패턴(눈, 코, 입)
후기 층: 고수준 개념(얼굴 전체)
연결(Connection): 뉴런 간의 신호 전달 경로
실제 예시와 비교
입력: 얼굴 이미지 정보를 습득
첫 번째 층: 이미지의 가장 기본 요소 감지(수직선, 수평선, 곡선, 명암 차이)
중간 층: 기본 요소를 조합해 더 복잡한 패턴 감지(눈, 코, 입, 귀와 같은 얼굴 구성 요소)
상위 층: 구성 요소들을 종합해 전체 얼굴 패턴 인식
"이 패턴의 조합은 90% 확률로 김민수의 얼굴이다"

AI 기술의 주요 응용 분야 - 1. 자연어 처리(NLP)
컴퓨터가 인간 언어를 이해하고, 해석하고, 생성할 수 있게 하는 AI 분야
1. 텍스트 분류
기술: 문서를 사전 정의된 카테고리로 분류
접근법: 단어 임베딩 + 분류 알고리즘, BERT와 같은 사전 훈련 모델 활용
응용 사례:
스팸 필터링: 이메일 메시지를 스팸/정상으로 분류
감성 분석: 고객 리뷰, 소셜 미디어 게시물의 감정 파악
주제 분류: 뉴스 기사, 지원 티켓 자동 카테고리화
2. 정보 추출
기술: 비구조화 텍스트에서 구조화된 정보 추출
접근법: 개체명 인식(NER), 관계 추출 모델
응용 사례:
계약서 분석: 중요 조항, 날짜, 금액 자동 추출
이력서 파싱: 지원자 정보, 기술, 경험 구조화
의료 기록 분석: 증상, 진단, 처방 정보 추출

AI 기술의 주요 응용 분야 - 1. 자연어 처리(NLP)
3. 대화 시스템
기술: 사용자와 자연스러운 대화를 나누는 시스템
접근법: 의도 인식, 개체 추출, 대화 상태 관리, 응답 생성
응용 사례:
고객 지원 챗봇: 자주 묻는 질문 응답, 간단한 문제 해결
가상 비서: 일정 관리, 리마인더 설정, 정보 검색
예약 시스템: 레스토랑, 미용실, 병원 예약 자동화
4. 텍스트 생성
기술: 주어진 입력에 기반한 자연스러운 텍스트 생성
접근법: 대규모 언어 모델(LLM), 시퀀스-투-시퀀스 모델
응용 사례:
자동 요약: 긴 문서나 기사의 핵심 내용 추출
콘텐츠 생성: 마케팅 문구, 제품 설명, 뉴스 기사 초안 작성
코드 생성: 프로그래밍 코드 자동 생성 및 완성 제안

AI 기술의 주요 응용 분야 - 1. 자연어 처리(NLP)
NLP 구현 시 주요 고려사항
언어 및 도메인 특화: 다국어 지원이나 특정 산업 용어 처리 필요성
컨텍스트 이해: 단순 키워드 매칭이 아닌 의미와 맥락 이해 중요
학습 데이터 품질: 도메인 특화 데이터로 미세 조정 필요
프라이버시 및 편향: 사용자 데이터 처리 시 개인정보 보호 및 편향성 주의
사용자 경험 통합: 자연스러운 대화 흐름과 오류 복구 메커니즘 설계

AI 기술의 주요 응용 분야 - 2. 컴퓨터 비전
기계가 이미지와 비디오를 이해하고 해석할 수 있게 하는 기술
1. 이미지 분류
기술: 이미지를 사전 정의된 카테고리로 분류
접근법: CNN 아키텍처, 전이 학습(ResNet, VGG, EfficientNet 등)
응용 사례:
제품 카탈로그 자동화: 제품 이미지 카테고리 분류
식물/동물 인식: 종 식별 및 분류
의료 영상 진단: X-ray, MRI 등에서 병변 분류
2. 객체 탐지
기술: 이미지 내 객체 위치와 클래스 동시 식별
접근법: YOLO, SSD, Faster R-CNN 등의 객체 탐지 네트워크
응용 사례:
자율주행: 도로 위 차량, 보행자, 표지판 감지
소매업 분석: 매장 내 고객 행동 및 제품 배치 분석
보안 감시: 비정상 행동이나 금지된 품목 감지

AI 기술의 주요 응용 분야 - 2. 컴퓨터 비전
3. 이미지 분할
기술: 픽셀 수준에서 이미지를 의미있는 영역으로 분할
접근법: U-Net, Mask R-CNN, DeepLab 등의 분할 네트워크
응용 사례:
의료 이미지 분석: 장기, 종양 경계 정확한 식별
자율주행: 도로, 인도, 건물 등 정밀한 환경 인식
증강 현실: 배경과 전경 분리로 가상 객체 자연스러운 통합
4. 얼굴 인식 및 분석
기술: 얼굴 식별, 특징 추출, 감정 분석
접근법: 얼굴 탐지, 랜드마크 추출, 특징 벡터 생성, 얼굴 임베딩 비교
응용 사례:
출입 통제: 생체 인식 기반 보안 시스템
사용자 경험 개인화: 감정 기반 콘텐츠 추천
사진 앱: 자동 태깅 및 앨범 구성

AI 기술의 주요 응용 분야 - 2. 컴퓨터 비전
컴퓨터 비전 구현 시 주요 고려사항
데이터 다양성: 다양한 조명, 각도, 배경의 데이터로 학습 필요
계산 리소스: 특히 실시간 처리 시 효율적인 모델 설계 중요
윤리적 고려사항: 생체정보 처리, 감시, 프라이버시 문제
증강 기법: 제한된 데이터셋 확장을 위한 데이터 증강 전략

AI 기술의 주요 응용 분야 - 3. 추천 시스템
사용자 선호도를 예측하여 개인화된 항목이나 콘텐츠를 제안하는 AI 기술
1. 협업 필터링(Collaborative Filtering)
원리: "유사한 사용자는 유사한 항목을 선호한다"는 가정
접근법:
사용자 기반: 유사한 사용자들이 좋아한 항목 추천
항목 기반: 사용자가 좋아한 항목과 유사한 항목 추천
행렬 분해: 사용자-항목 상호작용 행렬의 잠재 요인 발견
장점: 콘텐츠 특성 없이도 효과적, 예상치 못한 좋은 추천 가능
단점: 콜드 스타트 문제(새 사용자/항목), 데이터 희소성 문제
2. 콘텐츠 기반 필터링(Content-based Filtering)
원리: 사용자가 과거에 선호한 항목과 유사한 특성을 가진 항목 추천
접근법:
항목 특성 벡터화(메타데이터, 텍스트 분석 등)
사용자 선호 프로필 구축
코사인 유사도 등으로 매칭
장점: 새 항목도 추천 가능, 도메인 지식 활용 가능
단점: 특성 엔지니어링 필요, 예상치 못한 추천 어려움

AI 기술의 주요 응용 분야 - 3. 추천 시스템
3. 하이브리드 접근법
원리: 여러 추천 기법의 장점 결합
접근법:
가중치 모델: 여러 추천 결과를 가중치로 조합
특성 증강: 한 접근법의 출력을 다른 접근법의 입력으로 사용
앙상블 기법: 여러 모델 결합으로 정확도 향상
장점: 각 방식의 단점 보완, 더 강건한 추천 가능
단점: 구현 복잡성 증가, 튜닝 어려움
4. 맥락 인식 추천(Contextual Recommendation)
원리: 사용자 선호도는 상황(시간, 위치, 기분)에 따라 변한다는 가정
접근법:
맥락 정보를 추가 차원으로 활용
시간적 패턴 학습
세션 기반 추천
장점: 상황에 맞는 정확한 추천, 사용자 만족도 향상
단점: 더 복잡한 모델링, 추가 데이터 필요

AI 기술의 주요 응용 분야 - 3. 추천 시스템
추천 시스템 구현 시 주요 고려사항
KPI 명확화: 추천의 목표(다양성, 관련성, 신규성 등) 균형
데이터 수집 전략: 명시적(평점) vs 암묵적(클릭, 시청 시간) 피드백
실시간 vs 배치 처리: 사용자 행동에 즉각 반응 vs 정기적 모델 업데이트
설명 가능성: 추천 이유를 사용자에게 제시하는 능력
평가 방법론: 오프라인 평가(정확도)와 온라인 평가(A/B 테스트) 병행

AI 기술의 주요 응용 분야 - 4. 예측 분석
과거 데이터를 기반으로 미래 결과와 추세를 예측하는 AI 기술
1. 시계열 예측
기술: 시간 경과에 따른 데이터 패턴 분석 및 미래 값 예측
접근법: ARIMA, Prophet, LSTM 신경망
응용 사례:
수요 예측: 소매업체의 재고 최적화, 제조업의 생산 계획 수립
리소스 할당: 클라우드 서버 자원 사전 할당, 콜센터 인력 배치
예방적 유지보수: 설비 고장 전 유지보수 일정 최적화
2. 이상 탐지
기술: 정상 패턴에서 벗어난 비정상적 데이터 포인트 식별
접근법: 밀도 기반 방법, 앙상블 방법, 오토인코더
응용 사례:
사기 탐지: 금융 거래의 비정상적 패턴 감지
네트워크 보안: 침입 시도나 비정상 트래픽 식별
제조 품질 관리: 생산 라인의 결함 제품 조기 식별

AI 기술의 주요 응용 분야 - 4. 예측 분석
3. 의사결정 최적화
기술: 다양한 옵션을 평가하여 최적의 결정 경로 추천
접근법: 강화학습, 휴리스틱 알고리즘, 몬테카를로 시뮬레이션
응용 사례:
가격 최적화: 수요와 경쟁을 고려한 동적 가격 책정
포트폴리오 관리: 리스크와 수익을 고려한 투자 배분
운영 최적화: 공급망 및 물류 경로 최적화
구현 시 주요 고려사항
데이터 품질과 양: 예측 모델은 충분한 양의 고품질 데이터 필요
설명 가능성: 특히 중요한 의사결정에서는 모델의 예측 이유 설명 필요
불확실성 정량화: 단일 예측값이 아닌 신뢰 구간 제공이 중요
피드백 루프: 예측과 실제 결과 비교를 통한 지속적 모델 개선
도메인 지식 통합: 통계적 패턴과 함께 산업별 특성 고려 필요

AI 기술의 주요 응용 분야 - 5. 지능형 자동화
AI를 활용해 반복적이고 규칙 기반적인 작업을 자동화하면서도 예외 상황에 지능적으로 대응하는 기술
1. 업무 프로세스 자동화
기술: 규칙 기반 작업의 순차적 자동화
접근법: 업무 워크플로우 매핑, 스크립팅, 시각적 자동화
응용 사례:
재무 및 회계: 송장 처리, 급여 계산, 비용 보고서 검증
HR 프로세스: 이력서 선별, 온보딩 문서 처리, 근태 관리
IT 운영: 시스템 모니터링, 백업, 사용자 계정 관리
문서 이해 및 처리
기술: 비구조화 문서에서 정보 추출 및 처리
접근법: OCR, 문서 이해 모델, 템플릿 매칭
응용 사례:
계약 관리: 중요 조항 추출, 계약 비교, 갱신 알림
보험 청구 처리: 청구서 디지털화, 유효성 검증, 승인 자동화
규제 준수: 문서 분류, 민감 정보 식별, 보관 정책 적용

AI 기술의 주요 응용 분야 - 5. 지능형 자동화
3. 인지 자동화
기술: AI로 강화된 자동화로 판단이 필요한 작업 수행
접근법: ML 모델과 RPA의 결합, 사람-기계 협업 워크플로우
응용 사례:
고객 서비스: 고객 의도 이해 및 적절한 응대 자동화
품질 보증: 복잡한 패턴 인식 기반 품질 검사
지식 작업: 연구 데이터 합성, 보고서 초안 작성
구현 시 주요 고려사항
업무 프로세스 재설계: 자동화 전 비효율적 프로세스 최적화 필요
예외 처리 메커니즘: 자동화가 처리할 수 없는 상황 대비 명확한 에스컬레이션 경로
통합 복잡성: 기존 레거시 시스템과 현대적 AI 도구 간 통합 난이도
ROI 측정: 시간 절약, 오류 감소, 처리량 증가 등 명확한 성과 지표 설정
직원 재배치: 자동화로 대체된 업무의 직원들을 더 가치 있는 역할로 재배치

AI 기술의 주요 응용 분야 - 6. 금융 AI (FinTech)
금융 서비스의 접근성, 효율성, 안전성을 향상시키는 AI 기술
1. 리스크 평가 및 언더라이팅
기술: 대출 신청자의 리스크 및 신용도 평가 자동화
접근법: 머신러닝 기반 신용 모델, 대안 데이터 활용
응용 사례:
포용적 금융: 전통적 신용 기록이 부족한 소외 계층 신용 평가
SME 금융: 중소기업의 복잡한 리스크 프로필 효율적 평가
보험 상품: 개인화된 리스크 평가 기반 맞춤형 보험 상품
2. 자산 관리 자동화
기술: 투자 포트폴리오 구성 및 관리 자동화
접근법: 현대 포트폴리오 이론, ML 기반 시장 예측, 최적화 알고리즘
응용 사례:
로보어드바이저: 비용 효율적인 자동화 투자 관리
목표 기반 투자: 개인 재정 목표에 맞춘 투자 전략
ESG 투자: 환경, 사회, 거버넌스 기준 기반 포트폴리오 구성

AI 기술의 주요 응용 분야 - 6. 금융 AI (FinTech)
3. 사기 탐지 및 예방
기술: 비정상적 금융 활동 실시간 감지
접근법: 이상 탐지 알고리즘, 행동 바이오메트릭스, 네트워크 분석
응용 사례:
카드 부정 사용: 비정상적 구매 패턴 실시간 감지
자금 세탁 방지: 복잡한 거래 네트워크 분석
계정 보안: 행동 기반 사용자 인증
구현 시 주요 고려사항
규제 준수: 금융 규제기관의 엄격한 규정 충족 필요
모델 공정성: 인종, 성별, 연령 등에 따른 차별 방지
보안 우선주의: 금융 데이터의 민감성으로 인한 강력한 보안 조치
실시간 성능: 특히 사기 탐지에서 중요한 지연 없는 처리 능력
설명 가능성: 규제 및 고객 신뢰를 위한 결정 이유 설명 능력

Break Time

특성 공학(Feature Engineering)
raw 데이터를 AI 모델이 학습할 수 있는 의미 있는 입력으로 변환하는 과정
모델 성능에 결정적인 영향을 미치는 요소
특성 공학의 기본 개념과 중요성
정의: 원시 데이터에서 모델의 예측력을 높일 수 있는 정보를 추출하는 과정
목적: 데이터의 패턴을 더 명확히 드러내고, 모델의 학습을 용이하게 함
중요성: 동일한 알고리즘이라도 특성 선택에 따라 성능이 크게 달라짐
“AI 모델은 요리사, 데이터는 재료, 특성은 손질된 재료.재료 손질이 안 되면 요리사가 요리를 배우는 속도와 정확도가 떨어진다.”

주요 특성 공학 기법과 사례
1. 특성 선택 (Feature Selection)
방법: 불필요한 특성 제거로 모델 복잡성 감소
이점: 과적합 위험 감소, 학습 속도 향상, 해석 가능성 증가
사례: 신용 평가 모델에서 수백 개의 변수 중 예측력이 높은 20개만 선별하여 모델 정확도와 설명력 향상
2. 특성 추출 (Feature Extraction)
방법: 차원 축소(PCA, t-SNE), 텍스트 벡터화(Word Embedding), 이미지 특성 추출
이점: 고차원 데이터 단순화, 계산 효율성 증가
사례: 제품 리뷰 분석 시 단어 임베딩을 통해 의미적으로 유사한 피드백을 그룹화하여 통찰 도출

주요 특성 공학 기법과 사례
3. 특성 변환 (Feature Transformation)
방법: 스케일링, 정규화, 비선형 변환(로그, 다항식)
이점: 모델의 안정적 학습 지원, 관계 패턴 강화
사례: 부동산 가격 예측 모델에서 면적과 가격의 비선형 관계를 로그 변환으로 선형화하여 예측 정확도 향상
4. 특성 생성 (Feature Creation)
방법: 기존 특성 조합, 도메인 지식 기반 새로운 특성 정의
이점: 데이터에 내재된 복잡한 패턴 포착
사례: 이커머스 추천 시스템에서 '구매 빈도 × 평균 지출액'이라는 새로운 특성을 생성하여 고객 생애 가치 예측 개선

PM의 특성 공학 관련 역할
도메인 지식 연결: 비즈니스 인사이트를 유용한 특성으로 변환하는 가교 역할
예시: 금융 PM은 "지난 30일 계좌 활동 횟수"가 사기 탐지에 중요하다는 도메인 지식을 데이터 과학자와 공유
특성 우선순위 설정: 제품 가치에 가장 큰 영향을 미치는 특성에 집중
예시: 헬스케어 앱에서 사용자 참여도를 높이는 특성 개발에 우선순위 부여
데이터 수집 전략: 유용한 특성 생성을 위한 데이터 수집 방향 제시
예시: 사용자 여정의 특정 지점에서 추가 데이터 수집 포인트 설계
특성 유지보수 계획: 시간에 따른 특성 관련성 변화 관리
예시: 계절적 요인이 강한 특성의 정기적 재검증 프로세스 수립

데이터 품질과 AI 성능의 상관관계
'쓰레기를 넣으면 쓰레기가 나온다(Garbage In, Garbage Out)'

데이터 품질의 핵심 차원과 AI 성능에 미치는 영향
1. 정확성 (Accuracy)
정의: 데이터가 실제 값과 얼마나 일치하는지의 정도
영향: 부정확한 데이터는 모델에 잘못된 패턴을 학습시킴
사례: 잘못 분류된 이미지로 학습된 컴퓨터 비전 모델은 일관된 오류 패턴 생성
PM 고려사항: 데이터 검증 절차, 오류 보고 메커니즘, 외부 데이터 품질 평가

데이터 품질과 AI 성능의 상관관계
2. 완전성 (Completeness)
정의: 필요한 데이터 포인트가 누락 없이 존재하는지 여부
영향: 누락된 데이터는 편향된 학습과 불완전한 예측으로 이어짐
사례: 특정 인구 집단의 데이터가 부족한 의료 진단 모델은 해당 집단에 대해 낮은 정확도 제공
PM 고려사항: 데이터 수집 범위, 누락 데이터 처리 전략, 데이터 격차 식별 방법
3. 일관성 (Consistency)
정의: 서로 다른 시간과 소스에서 데이터 표현의 일관성
영향: 일관성 없는 데이터는 노이즈를 증가시키고 모델 학습을 방해
사례: 다른 팀에서 다른 형식으로 기록한 고객 데이터로 인한 CRM 예측 오류
PM 고려사항: 데이터 표준화 프로세스, 메타데이터 관리, 통합 데이터 사전

데이터 품질과 AI 성능의 상관관계
4. 적시성 (Timeliness)
정의: 데이터의 최신성과 업데이트 주기
영향: 오래된 데이터는 현재 패턴과 트렌드를 반영하지 못함
사례: 코로나19 이전 데이터로 학습된 여행 수요 예측 모델의 실패
PM 고려사항: 데이터 업데이트 주기, 실시간 데이터 필요성, 모델 재학습 트리거
5. 대표성 (Representativeness)
정의: 데이터가 실제 사용 환경과 사용자를 적절히 대표하는지 여부
영향: 대표성 없는 데이터는 실제 환경에서 성능이 크게 저하됨
사례: 특정 지역 사용자에 편중된 데이터로 학습된 글로벌 추천 시스템의 지역별 성능 격차
PM 고려사항: 다양한 사용자 그룹 데이터 확보, 편향 검출 방법, 데이터 다양성 지표

데이터 품질 개선을 위한 실용적 전략
1. 데이터 프로파일링과 모니터링
정기적인 데이터 감사와 품질 지표 추적, 이상치, 패턴 변화, 분포 이동 자동 감지
PM 액션: 데이터 품질 대시보드 구축 및 정기 리뷰 프로세스 수립
2. 데이터 클렌징 파이프라인
자동화된 오류 감지 및 수정 프로세스, 결측치 처리 전략 (삭제, 대체, 예측)
PM 액션: 데이터 클렌징 자동화에 대한 투자 우선순위 설정
3. 품질 피드백 루프
사용자 피드백을 데이터 품질 개선에 활용, 모델 오류를 데이터 문제로 추적하는 메커니즘
PM 액션: 사용자가 AI 오류를 쉽게 보고할 수 있는 인터페이스 설계
4. 데이터 거버넌스 체계
데이터 소유권과 책임 명확화, 품질 표준과 메트릭 정의
PM 액션: 데이터 품질 관련 역할과 책임(RACI) 매트릭스 수립

AI 성능 지표 - 정확도 vs 정밀도
1. 정확도(Accuracy)란 무엇인가?
간단 정의: 전체 예측 중에서 올바른 예측의 비율
실생활 비유: 100명의 고객 중 몇 명에게 올바른 제품을 추천했는가
한계점: 데이터가 불균형할 때 오해의 소지가 있음
"90% 정확도 = 10명 중 9명에게 제대로 작동, 1명에게는 오작동"
2. 정밀도(Precision)와 재현율(Recall)의 트레이드오프
'스팸 이메일 필터' 사례
정밀도: 스팸으로 표시한 이메일 중에서 실제 스팸의 비율
높은 정밀도 = 스팸함에 있는 대부분이 진짜 스팸 (오탐지 적음)
낮은 정밀도 = 중요 이메일이 자주 스팸으로 잘못 분류됨
재현율: 실제 스팸 중에서 필터가 잡아낸 비율
높은 재현율 = 대부분의 스팸을 성공적으로 필터링 (놓치는 스팸 적음)
낮은 재현율 = 많은 스팸이 받은편지함으로 새어나감

AI 성능 지표 - 정확도 vs 정밀도
정밀도를 높이면 보통 재현율이 낮아짐 (엄격한 필터: 확실한 스팸만 차단, 많은 스팸 놓침)
재현율을 높이면 보통 정밀도가 낮아짐 (관대한 필터: 대부분 스팸 차단, 일반 메일도 함께 차단)
“비즈니스에 더 중요한 것은 무엇인가?”
고객 불만 최소화(높은 정밀도) vs 문제 상황 최대한 감지(높은 재현율)

오류 유형
거짓 양성(False Positive): "아니오"를 "예"로 잘못 예측
예: 정상 거래를 사기로 오인, 건강한 사람을 환자로 오진단
영향: 사용자 불편, 신뢰 손상, 불필요한 개입 비용
거짓 양성의 비용이 더 높은 경우: 높은 정밀도(Precision) 목표 설정
예: 정상 사용자 계정 차단은 즉각적인 고객 불만과 수익 손실 초래
거짓 음성(False Negative): "예"를 "아니오"로 잘못 예측
예: 사기 거래를 정상으로 오인, 질병을 발견하지 못함
영향: 안전 위험, 기회 손실, 문제 악화 비용
거짓 음성의 비용이 더 높은 경우: 높은 재현율(Recall) 목표 설정
예: 사기 거래 놓치면 직접적인 금전 손실과 보안 위험 초래

AI 영역별 필수 성능 지표
1. 분류 모델 (스팸 감지, 콘텐츠 필터링, 이상 탐지)
핵심 균형 지표: 정밀도 vs 재현율
"거짓 양성"과 "거짓 음성" 중 어느 것이 비즈니스에 더 해로운가?
2. 추천 시스템 (상품, 콘텐츠 추천)
핵심 균형 지표: 정확성 vs 다양성
"사용자가 확실히 좋아할 항목"과 "새로운 발견 기회" 사이의 균형점은?
3. 자연어 처리 (챗봇, 텍스트 분석)
핵심 균형 지표: 정확도 vs 응답률
"모르겠습니다"라고 말하는 빈도와 잘못된 정보 제공 리스크 사이의 균형은?

모델 평가를 위한 교차 검증
교차 검증의 기본 원리
목적: 모델이 보지 않은 데이터에서도 잘 작동하는지 평가
기본 접근법: 데이터를 훈련, 검증, 테스트 세트로 분할
중요성: 과적합 감지 및 실제 성능 추정에 필수

PM이 알아야 할 주요 교차 검증 기법
K-폴드 교차 검증
방법: 데이터를 K개 부분으로 나누고, 각 부분을 한 번씩 테스트 세트로 사용
장점: 모든 데이터가 훈련과 테스트에 활용됨
제품 영향: 더 안정적인 성능 추정으로 제품 출시 결정에 확신 제공
시간 기반 교차 검증
방법: 시간순으로 데이터 분할 (과거 데이터로 학습, 미래 데이터로 테스트)
적용: 금융 예측, 수요 예측 등 시간적 의존성이 있는 문제
제품 영향: 실제 사용 환경에서의 성능을 더 정확히 반영

핵심 AI 영역별 필수 성능 지표
1. 분류 모델 (스팸 감지, 콘텐츠 필터링, 이상 탐지)
핵심 균형 지표: 정밀도 vs 재현율
PM 의사결정: "거짓 양성"과 "거짓 음성" 중 어느 것이 비즈니스에 더 해로운가?
2. 추천 시스템 (상품, 콘텐츠 추천)
핵심 균형 지표: 정확성 vs 다양성
PM 의사결정: "사용자가 확실히 좋아할 항목"과 "새로운 발견 기회" 사이의 균형점은?
3. 자연어 처리 (챗봇, 텍스트 분석)
핵심 균형 지표: 정확도 vs 응답률
PM 의사결정: "모르겠습니다"라고 말하는 빈도와 잘못된 정보 제공 리스크 사이의 균형은?

전통적 제품 개발과 AI 제품 개발의 차이
1. 요구사항 정의
전통적 제품 개발: 기능적 요구사항 중심
AI 제품 개발: 데이터 가용성과 품질 요구사항 포함
PM의 추가 고려사항: 필요한 데이터가 확보 가능한지, 품질은 어떤지 사전 평가
2. 설계
전통적 제품 개발: UI/UX 흐름과 아키텍처
AI 제품 개발: 데이터 파이프라인과 모델 아키텍처 포함
PM의 추가 고려사항: 데이터 수집부터 모델 서빙까지 전체 흐름 고려
3. 개발
전통적 제품 개발: 코드 구현과 테스트
AI 제품 개발: 모델 학습과 파이프라인 구축 병행
PM의 추가 고려사항: 모델 학습에 필요한 추가 시간과 리소스 계획

전통적 제품 개발과 AI 제품 개발의 차이
4. 테스트
전통적 제품 개발: 기능 검증과 버그 수정
AI 제품 개발: 모델 성능 검증과 편향성 테스트 추가
PM의 추가 고려사항: 다양한 사용자 그룹과 시나리오에서의 모델 성능 검증
5. 배포
전통적 제품 개발: 정적 버전 릴리스
AI 제품 개발: 모델과 코드의 분리 배포 가능성
PM의 추가 고려사항: 모델만 업데이트하는 전략과 전체 앱 업데이트 전략 구분
6. 모니터링
전통적 제품 개발: 버그와 사용성 모니터링
AI 제품 개발: 모델 성능과 데이터 드리프트 모니터링 추가
PM의 추가 고려사항: 성능 저하 시 대응 계획과 자동/수동 개입 기준 수립

전통적 제품과 차별화되는 AI 프로젝트 특성
데이터 의존성: 아이디어의 실현 가능성이 데이터 가용성에 직접적으로 연결됨
불확실성 증폭: 일반 소프트웨어보다 높은 기술적 불확실성 (모델이 원하는 성능에 도달할지 예측 어려움)
반복 사이클 장기화: 모델 학습과 검증에 필요한 시간으로 인한 피드백 사이클 연장

AI 프로젝트 차별화된 접근법
데이터 중심 기획
이상적 기능이 아닌 '확보 가능한 데이터'에서 출발하는 역방향 기획
핵심 의사결정 질문: "이 기능을 위해 어떤 데이터가 필요하고, 그 데이터를 어떻게 확보할 수 있는가?"
실제 사례: 넷플릭스는 추천 시스템 개발 전 시청 데이터 축적을 위한 기초 기능부터 구축
성공 기준의 이중 설정
기술적 성공 지표(정확도, 정밀도 등)와 비즈니스 성공 지표(전환율, 유지율 등) 병행 설정
최소 허용 가능 성능(Minimum Viable Accuracy)과 목표 성능 구분
실패 사례: 높은 기술적 정확도에도 불구하고 비즈니스 지표 개선에 실패한 음성 비서 프로젝트
단계적 복잡성 증가
간단한 규칙 기반 시스템 → 기본 ML 모델 → 고도화된 AI 솔루션으로 점진적 발전
각 단계마다 사용자 가치 검증을 통해 다음 단계 투자 결정
성공 사례: 아마존의 추천 시스템은 간단한 "함께 구매한 제품" 기능에서 시작해 점진적으로 복잡한 개인화 시스템으로 발전

주요 AI 프레임워크와 라이브러리
주요 딥러닝 프레임워크
TensorFlow(Google)
특징: 생산 환경 배포에 강점, TensorFlow Serving, TFLite 등 지원
사용 사례: 대규모 프로덕션 시스템, 모바일/엣지 배포
PM 고려사항: Google 생태계 통합 용이, 엔터프라이즈 지원
PyTorch (Meta)
특징: 연구 친화적, 동적 계산 그래프, 직관적 디버깅
사용 사례: 연구 프로토타입, NLP, 컴퓨터 비전
PM 고려사항: 반복 개발 속도 빠름, 프로덕션 배포는 추가 작업 필요

주요 AI 프레임워크와 라이브러리
데이터 처리 및 분석 도구
Pandas
기능: 데이터 조작, 분석, 정제
중요성: 거의 모든 데이터 과학 워크플로우의 기반
PM 관점: 데이터 준비 단계의 복잡성 이해에 도움
Dask / PySpark
기능: 대규모 분산 데이터 처리
사용 시점: 단일 머신 처리 한계 초과 시
PM 고려사항: 스케일링 요구사항과 인프라 투자
NumPy / SciPy
기능: 과학적 컴퓨팅, 수치 연산
중요성: 대부분 ML/DL 라이브러리의 기반
PM 관점: 기술적 논의 이해를 위한 기본 지식

클라우드 AI 서비스와 API 활용 전략
1. 사전 학습된 API 서비스
예시: Google Cloud Vision, Amazon Rekognition, Azure Cognitive Services
특징: 즉시 사용 가능한 기능, 별도 훈련 불필요
적합한 경우:
일반적인 태스크 (이미지 인식, 텍스트 분석, 음성 인식)
빠른 MVP 구축 필요
내부 AI 전문성이 제한적일 때
한계:
사용자 지정 기능 제한
서비스 종속성
데이터 프라이버시 우려

클라우드 AI 서비스와 API 활용 전략
2. 커스텀 모델 학습 플랫폼
예시: Google Vertex AI, AWS SageMaker, Azure Machine Learning
특징: 자체 데이터로 모델 훈련, 관리형 인프라
적합한 경우:
도메인 특화 문제
독자적 데이터 활용 필요
커스터마이징 필요성
고려사항:
데이터 준비 및 전처리 노력
클라우드 비용 관리
모델 관리 및 버전 제어

클라우드 AI 서비스와 API 활용 전략
3. 특화된 AI 서비스
예시: 대화형 AI(Dialogflow), 문서 처리(Amazon Textract)
특징: 특정 도메인에 최적화된 솔루션
적합한 경우:
해당 특화 영역이 제품의 핵심 기능
빠른 시장 진입 필요
평가 기준:
도메인 적합성
커스터마이징 유연성
확장성

하이브리드 접근법
1. 코어-새틀라이트 모델
핵심 차별화 기능은 내부 개발
보조 기능은 서비스로 구현
PM 적용: 제품의 핵심 가치 제안을 명확히 정의하고 거기에 자원 집중
2. 진화적 접근법
1단계: 클라우드 서비스로 빠르게 MVP 출시
2단계: 사용자 데이터 수집 및 제품 검증
3단계: 핵심 기능을 맞춤형 모델로 점진적 전환

AI 프로젝트 협업을 위한 효과적인 커뮤니케이션
데이터 과학자와의 소통
해야 할 것: 비즈니스 문제를 명확하게 정의, 기대 품질 수준 공유
피해야 할 것: 지나치게 기술적인 구현 방법 지시, 비현실적 정확도 요구
핵심 질문: "이 문제를 해결하기 위해 어떤 데이터가 필요한가?", "현실적으로 어느 정도의 성능이 가능한가?"
엔지니어링 팀과의 소통
해야 할 것: 배포 제약 조건 초기에 논의, 기술 부채 인정
피해야 할 것: 기술적 복잡성 과소평가, 인프라 요구사항 간과
핵심 질문: "프로덕션 환경에서 어떤 제약이 있는가?", "확장 시 예상되는 병목점은 무엇인가?"

AI 프로젝트 협업을 위한 효과적인 커뮤니케이션
디자인 팀과의 소통
해야 할 것: AI의 확률적 특성 설명, 오류 처리 UX 강조
피해야 할 것: AI를 "마법"처럼 소개, 불확실성 숨기기
핵심 질문: "사용자에게 AI 결과의 신뢰도를 어떻게 전달할 수 있을까?", "AI 오류 시 사용자 경험은 어떻게 설계해야 할까?"
경영진과의 소통
해야 할 것: 비즈니스 가치와 연결, 단계적 가치 실현 계획 제시
피해야 할 것: 지나친 기술적 세부사항, 모호한 성공 기준
핵심 질문: "이 AI 기능이 어떤 비즈니스 지표를 개선하는가?", "투자 대비 예상 수익은 무엇인가?"

그룹 연구(4인 1조)
AI 서비스를 실제 운용하고 있는 기업의 기술 블로그를 방문해 주요 기능의 실제 구현 기술과 그 배경을 살펴봅니다.
이 기술이 어떤 과정을 통해 고객 가치를 만들어내는지 기술적 측면과 비즈니스적 측면 두 관점에서 분석해 봅니다.
학습한 내용을 바탕으로, 해당 기술이 앞으로 더 나은 고객 가치를 창출하기 위해 필요한 발전 방향과 접근법을 정리합니다.

질의응답 & 토론

수고하셨습니다
