의사소통 기술(3)
프로덕트 팀의 전문성

사전 질문(15분)
PM은 어느 분야의 전문가가 되어야 할까요?

프로덕트 팀원(디자이너, 개발자)가 최고의 역량을 발휘하기 위해서 필요한 것은 무엇일까요?

사전 질문 토론
PM은 특정 분야의 전문가가 되어야 하는가?
대부분의 수강생들은 PM이 한 가지 분야의 전문가라기보다는 다양한 분야를 아우를 수 있는 제너럴리스트여야 한다고 생각함.
하지만 그중에서도 커뮤니케이션 능력을 가장 핵심적으로 꼽고 있음. PM의 역할을 팀원 간 조율, 소통, 조정하는 직무로 인식하는 경향이 강함.
특정 산업에 대한 도메인 지식이 필요하다는 의견도 일부 있지만, 전반적으로 PM의 전문성은 특정 기술(개발, 디자인, 경영)보다는 협업과 조율 능력에 집중됨.
PM이 너무 한 분야의 전문가가 되면 오히려 협업이 어려워질 수도 있다고 보는 시각도 존재함.
프로덕트 팀원(디자이너, 개발자)이 최고의 역량을 발휘하려면 무엇이 필요한가?
"환경을 만들어주는 역할"을 PM의 주요 역할로 보는 의견이 많음. 즉, 팀원들이 본인의 역할에 집중할 수 있도록 목표를 명확히 하고, 방해 요소를 최소화하는 것을 중요하게 생각함.
자율성과 방향성의 균형을 강조하는 경우가 많음. 즉, 목표가 명확해야 하고, 각자의 역할이 분명히 나뉘어 있어야 함.
팀원 간 정보와 목표의 일치가 중요하다고 보는 시각이 많음. 정보가 통일되고, 같은 목표를 바라볼 때 생산성이 올라간다고 생각하는 경향이 강함.
동기부여가 필요하다는 의견도 있지만, 개인적인 동기보다는 **환경적 요인(자율 출근제, 업무 분업, 피드백 체계 등)**을 강조하는 의견이 많음.

Case: 지식으로 소통하는 법
제가 다니던 첫회사의 사업 분야 - 레이더&전파 통신
우리 회사를 LED 회사가 인수
인수한 모 회사에서 기존 연구소장을 우리 회사의 연구소장으로 임명
LED 전문가였던 연구소장과는 함께 일하고 싶지 않다고 팀원들이 반발

이 문제를 어떻게 해소할 수 있었을까?

"자신이 이해하지 못하는 것을 관리하려는 시도는 어리석음의 극치다." 
- 피터 드러커

PM은 좋은 제품을 만드는데 필요한 ‘모든 것'을 알아야 한다

좋은 제품을 만드는데 필요한 ‘모든 것'을 알아야 한다
좋은 제품을 만들기 위해서 필요한 것
: 기업 - 제품 생산 - 고객 - 구매 - 이익

고객에게 ‘가치 있는' 제품이어야 한다
기업에게 ‘이익이 남는' 제품이어야 한다
제때 ‘올바른 제품'을 생산할 수 있어야 한다

하지만 정말 ‘모든 것’을 알 필요는 없다
PM은 모든 것을 알 필요는 없다.
하지만 제품 성공을 위해 반드시 이해해야 하는 핵심 개념이 있다.
PM의 주요 역할은 ‘전문가들과 협업하는 사람’이다.
PM은 ‘모든 것을 깊이 알 필요는 없지만, 모든 것을 연결할 수 있어야 한다.’

“PM이 오너십을 갖고 전문성을 가져야 할 분야는 무엇일까?”

고객 가치
PM은 고객을 이해하는 것에 대한 ‘오너십'을 갖는다
고객은 왜 ‘제품’을 구매할까? - 가치있기 때문
고객이 무엇에 가치를 느끼는지를 알아야 한다
기업은 이 제품이 가치있다고 ‘주장’한다.
하지만 기업이 만든 제품이 정말 가치있는 제품인가?
제품의 가치는 ‘고객'이 결정한다

고객 가치 - 고객에 대한 이해
고객은 무엇에 ‘불편함'을 느끼는가?
고객은 어떤 ‘욕구'가 있는가?
고객은 언제 제품을 ‘구매'하는가?
고객은 제품에 대해 어떤 ‘감정'을 느끼는가?

많은 프로덕트 매니저들이 고객에 대해 그저 ‘추측’을 한다
“고객 가치는 ‘추측'이 아닌 진짜 고객에 대한 ‘이해'에서 시작해야 한다"

정성적 분석 vs 정량적 분석

고객 가치 - 정성&정량 분석 모두 중요하다
정성적 분석
고객이 특정 행동을 하는 ‘이유'는?
인간은 통계로 이루어진 동물이 아니다
고객이 왜 이런 행동을 하는지를 모르면 어떤 데이터도 해석이 불가능하다

행동심리학, 뇌과학, 사회학, 철학 등
정량적 분석
고객이 실제로 ‘무엇’을 하는가?
숫자만이 더 가치있는 행동을 발견하게 한다
다양한 분석도구들을 통해 ‘판단'이 가능해 졌다
데이터 분석은 PM의 핵심 의사소통 수단

고객 행동 데이터, 퍼널 분석, A/B 테스트 등

2. 비즈니스
PM은 제품의 사업적 성공에 대한 오너십을 갖는다
좋은 제품 != 성공적인 제품
프로덕트 팀은 제품이 사업적인 성공을 거두었을 때만 가치가 있다.

비즈니스 성공 != 돈을 많이 버는 것
기업이 추구하는 가치를 세상에 많이 제공하면 고객은 구매를 한다
부동산 투자에는 프로덕트 매니저가 필요하지 않다	

2. 비즈니스 - 폭넓은 비즈니스 관련 업무
사업 개발
전략 기획
마케팅
브랜딩
영업
재무
법무
……

2. 비즈니스 - 마케팅은 갈 수록 중요해진다
제품을 구매하게 만드는 행위 - 마케팅
제품의 개발과 마케팅은 직접적으로 연결되어 있다
좋은 제품을 만드는 것 만큼잘 만들어진 제품을 잘 파는 것도 중요하다
https://brunch.co.kr/@uxjoseph/13

2. 비즈니스 - 시장과 산업에 대한 이해
도메인 지식의 의미? 시장과 산업의 전문성을 가져라
많은 PM들이 도메인 분야를 가리지 않고 일 할 수 있다
지식의 전문성이 아닌 시장과 산업의 전문성이 중요하기 때문

경쟁사에 대한 이해
기술 트렌드의 변화
관련 산업 분석자료 조사

경쟁사에 비해 ‘압도적으로' 좋은 제품을 만들어야 성공할 수 있다

3. 프로덕트
PM은 제품 출시에 대한 오너십을 갖는다

출시 과정에 대한 전반의 이해가 있어야
디자인은 어떻게 진행되는가?
개발은 어떻게 진행되는가?
프로젝트는 어떻게 관리되는가?

PM에게 무엇보다 중요한 것은
더 좋은 제품을 만들기 위해 필요한
끊임없는 도전과 집착이다

Break Time

우리 제품팀은 어떻게 구성되는가?
회사별로 다르지만……

1~2인의 디자이너
2~10인이 개발자
PM 1인

자율 + 책임

좋은 디자인이란?
잘 디자인 된 제품은 
1. 이해 가능(의사소통)하고 2. 쉽게 사용(상호작용)할 수 있어서 3. 사람들의 필요를 충족시켜줄 뿐만 아니라 4. 형태적 심미성과 즐거운 경험을 선사한다.

디자인 사고(Design Thinking)
디자인 사고는 단순한 UI/UX 설계를 넘어 문제 해결 방식을 의미함
PM과 디자이너가 협업할 때 가장 중요한 것은 고객 문제 해결에 집중하는 것
좋은 디자인 = 비즈니스적 가치를 창출하는 디자인

디자인 사고는 세상을 변화시킨다

디자이너는 PM의 최고의 파트너
디자이너는 제품의 본질을 시각화하는 역할
디자이너는 단순한 ‘요구사항 수행자’가 아님
디자이너가 비즈니스 목표와 고객 경험을 기반으로 주도적으로 디자인할 수 있어야 함
쉬지않고 디자이너와 고객 문제를 어떻게 해결할지 소통해야 한다.
PM과 디자이너가 함께 고민해야 할 질문들
“이 UI 요소가 고객 경험에 어떤 영향을 줄까?”
“고객이 원하는 것은 무엇이고, 디자인적으로 어떻게 해결할 수 있을까?”

디자이너에게 필요한 자율성(1) - UX 분석 및 설계
고객 경험은 당신 생각보다 훨씬 섬세하다
UX는 단순히 예쁜 디자인이 아니라, 사용자가 어떻게 제품을 경험하는지를 설계하는 과정이다.
고객 경험의 문제를 정의하고 해결하는 데 있어서 디자이너는 독립적인 역할을 수행해야 한다.
PM이 방향을 설정해주더라도, 실제 사용자 경험을 결정하는 것은 디자이너의 역할이다.

디자이너에게 필요한 자율성(2) - 최종 산출물
디자이너는 제품의 최종 비주얼을 담당하며, 이를 결정할 권한이 있다.
PM의 역할은 디자인의 본질적인 목적을 이해하고 피드백하는 것이지, 단순한 선호를 강요하는 것이 아니다.
"이 버튼이 더 커야 할 것 같은데요?" → ❌
"사용자들이 이 버튼을 쉽게 찾지 못한다고 피드백하는데 해결할 방법이 있을까요?" → ✅
디자인 의사결정이 브랜드 아이덴티티, 접근성(UX), 사용자 기대치와 일치하는지 판단하는 것은 디자이너의 역할이다.

디자이너에게 필요한 자율성(3) - 심미성 판단
"예쁜 디자인"이 아니라 "이해하기 쉬운 인터페이스"를 만드는 것이 목표.
심미성은 단순한 감각적 취향이 아니라, 사용자의 신뢰와 몰입도를 결정짓는 요소다.
감각적인 요소뿐만 아니라 브랜드 경험, 사용자 심리, 인지 부하 등을 고려해야 한다.
"이렇게 하는 게 더 예쁘지 않나요?" ❌ 
"이 요소가 사용자의 신뢰를 높이는 방향인가요?" ✅ 

디자이너의 오너십(1) - 제품 발견
“실제 고객에게 어떤 가치가 전달되는가?”
이 질문에 대한 결과물을 만드는 사람은 디자이너다
사용자의 니즈를 발견하고, 문제를 정의하는 과정에서 중요한 역할을 해야 한다.

디자이너의 오너십(2) - UI/UX 총괄
디자이너의 고민이 실제 고객의 경험으로 연결된다
UX는 단순한 화면 구성이 아니라, 사용자의 행동을 유도하는 설계이다.
크고 작은 차이들이 고객이 제품의 가치를 발견하고 말고를 결정한다
디자이너는 UI 요소가 사용자 여정(Flow)과 일관되게 연결되도록 책임져야 한다.

디자이너의 오너십(3) - 프로토타이핑
“디자이너는 실험을 통해 제품의 가능성을 테스트하는 사람이다.”
개발 전에 제품의 모습을 예상할 수 있도록, 프로토타입을 만들어 리스크를 줄이는 역할을 한다.
프로토타이핑을 통해 개발자와 협업이 원활하게 진행될 수 있도록 조율해야 한다.

디자이너의 오너십(4) - 사용자 검증
실제 제품이 출시되고 나서 고객이 어떻게 사용하는지에 따라 개선 방향이 결정된다
사용자가 실제로 어떻게 반응하는지를 관찰하고, UI/UX 개선 방향을 설정하는 역할을 해야 한다.
감각적인 디자인이 아니라 데이터 기반의 피드백을 반영하여 지속적으로 개선하는 과정이 필요하다.

개발자는 PM의 든든한 해결사
제품팀이 상상하는 기능을 실제로 구현해 내는 역할
전쟁으로 치면 실제 전투에 참여하는 역할
개발자와 좋은 관계를 유지하는 것 만큼 제품 성공에 힘이 되는 일이 없다
개선에 어려움이 있을때 개발자에게 아이디어를 구하면 생각보다 쉽게 해결책을 찾을 수도 있다

소프트웨어 아키텍처의 예

개발자에게 제공해야 할 자율성(1) - 가능 여부 판단
개발자는 단순한 ‘요청 실행자’가 아니라, 제품을 현실화하는 전문가이다.
일정이 촉박하거나 기술적 한계가 있을 경우, 개발자가 적절한 해결책을 찾을 수 있도록 해야 한다.
일정이 촉박해 개발이 어려운 경우 - 요구사항을 조정하는 것을 조율해야
“이거 구현 가능한가요?” → ❌
“이번 출시안에 이 기능을 어디까지 구현할 수 있을까요?”→ ✅

개발자에게 제공해야 할 자율성(2) - 문제 해결 방안 탐색
어떤 기능을 개발해주세요 - 용병팀이 되는 소통
어떤 문제를 해결해야 하는지 정의하는 것은 PM의 역할이지만, 해결 방법을 찾는 것은 개발자의 역할이다.
PM이 직접 해결책을 지시하기보다, 개발자들이 문제를 분석하고 최적의 방법을 제안하도록 해야 한다.
“이 기능을 추가해 주세요” ❌ 
“이런 경험을 설계해야 하는데 어떤 방법이 있을까요?” ✅

개발자에게 제공해야 할 자율성(3) - 개발 우선순위 선정
기능을 구현하는 순서를 정하는 것은 단순한 일정 관리가 아니다
기술적 의사결정은 기술의 전문가가 해야 정확하다
중요한 핵심 기능을 먼저 개발하고, 부수적인 기능을 나중에 다룰 수 있도록 조율해야 한다.

개발자의 오너십(1) - 구현 가능여부 검증 
개발자가 제품 출시에 최선을 다하지 않으면 고객 가치를 만들 수 없다.
모든 개발 검토는 ‘구현 가능성'을 높히는 방향으로 고려되어야 한다
단순히 "된다/안 된다"가 아니라, 최적의 방법과 현실적인 대안을 고려하는 역할을 맡아야 한다.

개발자의 오너십(2) - 새로운 기술 적용
개발자는 단순히 주어진 기능을 구현하는 것이 아니라, 새로운 기술을 탐색하고 적용하는 역할을 수행해야 한다.
기술의 발전 속도가 빠르기 때문에, 제품이 뒤처지지 않도록 최신 기술을 연구하고 적절하게 도입하는 것이 중요하다.
단순한 기능 추가가 아니라, 장기적으로 확장 가능하고 유지 보수에 용이한 기술 스택을 고민해야 한다.
신기술을 도입한다고 해서 반드시 제품이 더 좋아지는 것은 아니다. 비즈니스 목표와 사용자의 요구를 고려한 도입이 필요하다.

개발자의 오너십(3) - 버그&오류 해결
소프트웨어에서 버그는 필연적이다.
하지만 버그는 종종 고객 경험에 치명적인 영향을 준다
개발자가 자율적으로 버그를 관리하고, 장기적으로 발생할 수 있는 문제를 미리 해결할 책임이 있다.
PM이 버그 해결을 강요하는 것이 아니라, 개발팀이 주도적으로 품질을 관리할 수 있도록 하는 것이 중요하다.

개발자의 오너십(4) - 코드 개선 & 리팩토링
모든 시스템은 개발 만큼 유지 보수에 많은 리소스가 필요하다.
하지만 이런 복잡한 시스템의 코드는 개발자만 접근할 수 있다
단기적인 기능 개발만이 아니라, 장기적으로 유지보수가 가능한 코드 구조를 만드는 것이 중요하다.
개발자가 코드 품질을 책임지고 지속적으로 개선할 수 있도록 해야 한다.

PM이 전문가가 아닐 때 팀원들과 소통하는 법
PM은 “이해할 수 있을 만큼” 기술과 디자인에 대한 기초 지식을 가져야 한다.
개발자/디자이너와 신뢰 관계를 형성하는 가장 효과적인 방법은 "질문을 통한 학습"
질문을 통해 배운다. - “이 개념이 고객에게 어떤 영향을 미칠까요?”
의사결정의 맥락을 공유한다. - “우리가 해결하려는 문제는 이것인데, 어떤 접근이 좋을까요?”
전문성을 가진 팀원을 인정하고, 결정을 존중한다.

PM이 질문할 때 주의해야 할 점
단순히 "왜 이렇게 하나요?" 보다는 "이 방식이 고객 경험에 어떤 영향을 주나요?"라고 물어야
"다른 방법도 있을까요?"라고 대안을 묻되, 해결책을 강요하지 않는다.
팀원들이 PM을 "방해 요소"가 아니라 "협업 파트너"로 인식하도록 만들어야

질의응답 & 토론

사전 질문(15분)
PM은 어느 분야의 전문가가 되어야 할까요?

프로덕트 팀원(디자이너, 개발자)가 최고의 역량을 발휘하기 위해서 필요한 것은 무엇일까요?


수고하셨습니다
