문제 해결 및 분석적 사고(1)
문제 해결과 린 사고

사전 질문(15분)
완벽한 계획을 세우는 것이 불가능한 이유는 무엇일까? 이를 극복하기 위해서는 어떻게 해야 할가?

문제 해결을 시도했지만 잘못되었을 때 리스크를 최소한을 줄이기 위해선 어떻게 해야 할까?

사전 질문 토론
✅ 완벽한 계획을 세우는 것이 불가능한 이유와 극복 방법
예측 불가능한 변수 존재 – 시장 변화, 고객 반응, 외부 요인 등 통제할 수 없는 요소들이 많음.
인지적 한계와 불확실성 – 모든 가능성을 고려하고 대비하는 것은 현실적으로 불가능함.
극복 방법: 유연한 사고와 대처 능력 키우기, 다양한 시나리오를 고려한 플랜 B/C 마련, 지속적인 피드백 반영.
✅ 문제 해결 시 리스크를 최소화하는 방법
작은 규모로 테스트 후 점진적 접근 – 한번에 크게 시도하지 않고, 시장 반응을 보며 조정.
사전 대응책 마련 – 예상 가능한 리스크 분석 및 차선책(백업, 대체안) 준비.
빠른 문제 인식과 대응 – 실패를 빠르게 인정하고, 신속한 회고 및 대처로 불필요한 리소스 낭비 방지.

실제 Case로 시작
취업 포털을 운영하는 회사에서 긱 이코노미(주어진 프로젝트를 수행하는 프리랜서 시장)의 경쟁 업체의 성공을 벤치마킹하여 해당 분야에 진출을 시도했다
전략 기획의 최고 전문가의 기획을 바탕으로 1년간의 준비 기간과 1년간의 개발 기간을 거쳐 서비스를 런칭하게 되었다

이 제품은 성공하였을까? 실패하였을까?

문제 해결 != 임무 수행
어떤 문제를 해결하는 것과 주어진 태스크를 완수하는 것은 다르다
무엇이 문제인지를 인지했다고 해서 그 문제를 반드시 해결할 수 있는 것은 아니다
문제를 제대로 해결하지 못하게 되는 핵심적인 이유는 무엇일까?

문제를 해결하려면 무엇을 해야할까?
문제 인식 (문제가 있음을 감지)
문제 정의 (무엇이 문제인지 명확히)
해결책 탐색 (대안 생성)
해결책 선택 (최적 방안 결정)
실행 (해결책 구현)
평가 (성공 여부 확인)

위험이 발생하는 2가지 요소
문제 인식 (문제가 있음을 감지) - 문제를 발견하지 못하는 위험
문제 정의 (무엇이 문제인지 명확히) - 잘못된 문제를 선택하는 위험
해결책 탐색 (대안 생성) - 문제 해결의 방안을 찾지 못하는 위험
해결책 선택 (최적 방안 결정) - 잘못된 문제 해결 방안을 선택하는 위험
실행 (해결책 구현) - 문제 해결을 수행하지 못하는 위험
평가 (성공 여부 확인) - 최종 문제 해결여부를 확인하지 못하는 위험

이 두가지의 위험성을 줄이기 위해서는 어떻게 할 수 있을까?

우리는 완벽한 선택을 
할 수 없다는 것을 인정해야 한다

어떤 선택을 하던간에 위험성은 존재한다
모든 문제 해결 과정에서 불확실성은 필연적이다.
아무리 신중하게 결정해도, 위험성을 완전히 제거할 수는 없다.
중요한 건 위험성을 없애는 것이 아니라, 위험의 크기를 관리 가능한 수준으로 줄이는 것이다.

불확실성을 인정하지 않으면 문제 해결에 지나친 비용과 시간을 소비하게 된다.
현실에서는 완벽한 선택이 아닌 ‘최적의 선택’을 해야 한다는 점을 받아들여야 한다.

성공 확률을 높히기 = 낭비를 최소한을 줄이기
무엇이든 선택하고 시도해야 한다
우리의 선택이 완벽하지 않다는 것을 인정해야 한다.
그렇다면 이 선택이 잘못되더라도 그에 따른 낭비가 최소화 되어야 한다.

문제 해결 전략의 핵심 - 낭비를 최소한으로 줄인다

린 사고
린 사고의 시작 - 토요타의 사례
린 사고(Lean Thinking)의 출발점은 토요타 자동차 회사
1950년대 파산 위기까지 갔던 토요타는, 제한된 자원으로 경쟁력의 확보가 필요
당시 미국의 대량생산 방식(포드 모델)은 많은 재고와 자원 낭비로 이어짐
토요타는 적은 자원으로 최대 효율을 내는 방식을 추구했고, 이는 '린 생산방식(Lean Production)'으로 발전
핵심 철학: '더 적은 비용으로 더 높은 가치를 창출한다'

Lean 사고법의 핵심
린 사고는 '프로세스의 최적화'를 넘어, ‘낭비되는 문제 해결’을 근본적으로 막는 것이다.
진짜 해결해야 할 문제와 해결하지 않아도 되는 문제를 명확히 구분하고, 불필요한 노력과 자원 투입을 없애는 것이 핵심이다.

PM이 왜 린 사고를 가져야 하는가?
PM은 제한된 시간과 자원을 효율적으로 사용해야 한다.
린 사고법을 적용하면 업무 우선순위를 명확히 하고, 효과적인 의사결정을 할 수 있다.


린 사고에서 정의하는 7가지 낭비(1)
과잉 생산(Overproduction): 필요 이상의 제품이나 기능을 개발하는 것.

사용자가 원하지 않는 기능은 개발 비용과 시간을 낭비할 뿐 아니라, 핵심 가치의 명확성을 저하시킨다.
사용자의 진짜 요구를 이해하지 못한 상태에서 무조건 많은 기능을 추가하는 것은 실패의 지름길이다.
사례: 페이스북의 초기 ‘포크(poke)’ 기능처럼 사용되지 않는 기능 개발

린 사고에서 정의하는 7가지 낭비(2)
대기(Waiting): 프로세스 사이의 불필요한 지연. 
의사결정 지연, 승인 대기, 피드백 지연 등이 포함

의사결정, 승인, 피드백 등 업무 과정에서 발생하는 지연은 빠른 실행을 어렵게 만든다.
대기 시간이 길어질수록 변화에 대한 대응력이 떨어지고, 경쟁력 있는 제품 출시가 어려워진다.
사례: 제품 출시 전 경영진의 결재 지연으로 인해 출시 시기를 놓치는 사례

린 사고에서 정의하는 7가지 낭비(3)
운송/이동(Transportation): 불필요한 정보나 작업의 이동. 
팀 간 소통 비효율, 과도한 문서 전달 등

업무가 여러 단계를 거치면서 정보가 왜곡되거나 전달 과정이 지연될 수 있다.
이는 소통의 효율성을 떨어뜨리고, 명확한 의사결정을 어렵게 만든다.
사례: 불필요한 중간 보고 단계가 많아져 빠른 의사결정을 막는 회사

린 사고에서 정의하는 7가지 낭비(4)
과잉 처리(Over-processing): 필요 이상의 복잡한 처리나 작업. 
과도한 기능 정교화, 불필요한 복잡성 추가 등

고객이 원하지 않는 기능을 과도하게 정교하게 만드는 것은 사용자 경험을 악화시킬 수 있다.
또한, 개발 비용과 유지보수 비용 증가로 이어져 자원을 비효율적으로 사용하게 만든다.
사례: 간단한 채팅 기능이면 충분한데 화상통화, 파일 공유 등 모든 기능을 탑재하여 제품 복잡성을 증가시킨 사례

린 사고에서 정의하는 7가지 낭비(5)
재고(Inventory): 미완성 작업이나 과도한 백로그. 
개발 중인 너무 많은 기능, 미해결된 문제 누적 등

동시에 진행 중인 작업이 많으면 집중력이 분산되고, 어느 작업도 제대로 완수하기 어려워진다.
결국 업무의 질이 낮아지고 중요한 문제를 놓치게 된다.
사례: 많은 기능을 한 번에 개발하다가 우선순위를 놓쳐 출시를 못하는 프로젝트

린 사고에서 정의하는 7가지 낭비(6)
움직임(Motion): 작업 중 불필요한 동작이나 활동. 
비효율적인 워크플로우, 과도한 회의, 중복 작업 등

불필요한 회의, 중복 업무는 팀원들의 생산성을 저하시키고 업무 효율성을 떨어뜨린다.
본질적인 문제 해결에 집중하지 못하게 한다.
사례: 사소한 결정을 위해 여러 차례 회의를 반복해 최종 결정이 계속 지연되는 상황

린 사고에서 정의하는 7가지 낭비(7)
결함(Defects): 오류와 품질 문제. 버그, 사용자 경험 문제, 제품-시장 부적합 등

결함을 해결하는 데 드는 시간과 비용은 제품 초기 개발 비용보다 훨씬 크다.
또한 고객 만족도 하락과 브랜드 이미지 손상으로 이어진다.
사례: 충분한 테스트 없이 출시하여 심각한 버그가 발생, 고객 이탈과 브랜드 이미지 손상을 겪는 사례

스티브 잡스의 후계자가 팀 쿡이 된 이유
스티브 잡스는 창의적 혁신과 아이디어 창출에 뛰어난 리더였다.
팀 쿡은 제조 및 유통 프로세스에서 낭비를 제거하여 효율성을 극대화한 전문가였다.
애플은 지속 가능한 성장을 위해 창의성과 효율성 중 효율성의 중요성을 인지했고, 팀 쿡의 ‘린 사고’ 역량을 높이 평가했다.

사례 - 애플의 스티브 잡스 복귀 이후
1990년대 중반, 애플은 수백 개의 제품과 복잡한 사업 구조로 인해 심각한 재정 위기
매출 감소와 경쟁력 약화로 도산 직전 상태
잡스가 복귀한 후 첫 번째로 한 일은 대부분의 제품군을 단 4가지 제품으로 축소하는 것
불필요한 제품 라인을 과감히 제거하여 회사의 초점을 명확하게 했다.
이 결정으로 제품 품질과 브랜드 명확성이 크게 증가했고
결국 아이맥, 아이팟, 아이폰의 연이은 성공으로 연결되었다.
이는 결국 세계에서 가장 가치 있는 회사로 성장하는 계기가 되었다.

사례 - 인스타그램의 초기 린(Lean) 접근

인스타그램은 처음 '버븐(Burbn)'이라는 복잡한 앱으로 시작했다.
너무 많은 기능(체크인, 소셜 네트워크, 사진 공유)을 제공했으나, 고객 사용 데이터로 보니 사용자들은 오직 사진 공유만 좋아했다.
과감히 다른 기능을 버리고 사진 공유 기능만 남겨 재출시하였고, 대성공을 거뒀다.

사례 - 아마존의 '피자 두 판 법칙'
아마존의 제프 베이조스는 한 팀의 크기를 '피자 두 판으로 배부르게 먹을 수 있는 숫자(6~8명)'로 제한했다.
팀이 너무 크면 업무 효율성이 떨어지고 '운송/이동'과 '움직임' 낭비가 증가한다는 것을 발견했다.

왜 지금 PM에게 린 사고가 필요한가?
변화가 빠른 시대
시장 환경이 빠르게 변화하고 고객의 요구가 복잡해지고 있다.
PM은 제한된 자원과 시간으로 가장 가치 있는 문제에 집중해야 한다.
린 사고가 해결할 수 있는 문제
불필요한 기능이나 서비스 개발로 인한 리소스 낭비를 줄인다.
빠르게 변화하는 시장에서 신속한 검증(Validated Learning)을 통해 올바른 방향을 빠르게 찾을 수 있다.
PM에게 주는 실질적 효과
명확한 업무 우선순위를 통해 효율성을 높인다.
리소스를 절약하고 고객이 원하는 가치를 정확히 제공함으로써 조직 전체의 경쟁력을 높인다.

성공적인 문제 해결 = 실패하는 요소의 제거
왜 많은 문제 해결 과정이 실패하는가?
문제 해결의 성공 확률을 높이기 위해선 성공 요소를 늘리는 것보다 실패 요소를 먼저 제거하는 것이 중요하다.
문제 해결 과정에서 흔히 발생하는 실패 요소(낭비)를 명확히 이해하고, 이를 제거하는 것이 PM이 갖춰야 할 핵심 역량이다.
실패하는 요소를 먼저 제거해야 하는 이유
실패 요소를 제거하지 않은 채 새로운 시도만 추가하면, 실패 가능성도 함께 늘어난다.
효율적이고 성공적인 문제 해결은 실패 가능성을 최소화하는 과정에서 시작된다.


PM이 린 사고를 내재화해야 하는 이유

PM은 문제를 정의하고 우선순위를 정하며, 팀의 방향성을 결정하는 역할을 맡고 있다.
PM 본인이 린 사고를 갖추지 않으면, 조직 전체가 낭비 요소를 반복할 수밖에 없다.
PM은 문제를 효율적으로 정의하고 해결할 수 있도록, 낭비를 빠르게 발견하고 제거하는 능력을 가져야 한다.
PM이 린 사고를 활용할 때의 이점
명확하고 효율적인 의사결정으로 팀 전체가 같은 방향으로 빠르게 움직일 수 있다.
불필요한 업무와 문제 해결 과정의 낭비 요소를 미리 차단하여 조직 전체의 효율성을 높일 수 있다.

린 사고를 도입할 때 흔히 겪는 어려움
기존 업무 방식에 대한 저항
리더십의 이해 부족
단기 성과에 대한 압박
완벽주의 성향의 조직 문화
극복 방법
작고 빠른 성과부터 입증
이해관계자를 위한 교육 및 설득
성공 사례를 통한 조직 내 공유 및 전파

린 사고 적용 체크리스트
해결하고자 하는 문제가 정확히 정의되었는가?
이 문제를 해결하는 것이 정말 필요한가?
문제 해결 시도의 핵심 가설은 무엇인가?
최소한의 노력과 비용으로 가설을 검증하는 최소의 시도 무엇인가?
시도를 통해 명확한 데이터를 얻었는가?
검증된 학습을 바탕으로 다음 액션이 결정되었는가?
불필요한 낭비 요소를 제거했는가?

Break Time

린 사고의 확장
린 사고는 개념 이해를 넘어 실제 업무 환경에서 적용될 때 가치를 갖는다.
개념을 이해하는 것과 실제 조직에 적용하는 것은 별개의 문제다.

“린 사고를 실제 현장에 적용하려면 어떻게 해야 할까?”

린 사고를 조직에 확장하는 방법
조직 내 의사결정 구조에서 낭비를 발견하고 제거하기
작은 실험을 통해 빠르게 문제를 검증하고 방향을 조정하기
이를 효과적으로 실천하기 위한 구체적 방법론이 필요 → 린 스타트업

린 스타트업
에릭 리스(Eric Ries)가 2011년 제안한 문제 해결 실천 방법론
불확실성이 큰 환경에서 문제를 정의하고 해결하는 방법을 제시
기존 사업 계획 중심 접근법의 한계를 극복하는 새로운 접근법

전통적 방식: 완벽한 계획 → 실행 → 실패하면 큰 손실
린 스타트업: 최소 가설 설정 → 빠른 검증 → 실패 시 빠른 학습과 수정

기존 접근 방식의 문제점
전통적인 방식(상세 사업계획, 장기 로드맵)의 문제점
현실과 계획 사이의 괴리가 크다.
시장 변화에 신속히 대응하지 못하는 한계
오랜 준비 후 실패했을 때 비용이 너무 크다.
실패할 경우 이미 투입된 비용과 시간이 막대하여 회복이 어렵다.

린 스타트업의 핵심 질문
"무엇을 만들어야 할지 모르는 상황에서 어떻게 제품을 개발할 것인가?"
"어떻게 하면 최소한의 비용으로 중요한 가설을 빠르게 검증할 것인가?"

린 스타트업의 핵심 개념
검증된 학습(Validated Learning): 모든 활동의 목표는 학습
MVP(Minimum Viable Product, 최소 기능 제품): 최소한의 노력으로 최대한의 학습
구축-측정-학습(Build-Measure-Learn) 사이클: 빠른 피드백 루프
피봇(Pivot) 또는 지속(Persevere): 전략 전환 또는 심화

검증된 학습(Validated Learning)
모든 활동은 가설을 검증하고 학습을 얻기 위한 것이다.
검증된 학습이란 "고객의 실제 행동을 통해 가설을 명확하게 확인하는 것"을 의미한다.
빠르게 MVP를 통해 가설을 확인하고, 얻은 학습을 바탕으로 다음 결정을 내리는 과정이다.
사례: ‘버퍼(Buffer)’는 제품 없이 랜딩 페이지를 만들어 실제 가입률을 통해 사용자 반응을 확인하고 검증된 학습을 얻었다.

좋은 학습이 되기 위해서
명확한 가설: 무엇을 배우려 하는지 정확히 정의되어야 한다.
객관적인 데이터: 측정 가능한 데이터로부터 명확한 결론을 얻어야 한다.
빠른 반복: 빠르게 실험하고 빠르게 배워야 한다. 오래 걸리는 학습은 시장 변화에 대응하지 못한다.
좋은 학습 vs 나쁜 학습 비교
좋은 학습: MVP를 통한 객관적 데이터로 명확한 결론 도출
나쁜 학습: 직관이나 의견에 의존한 모호한 결론

구축-측정-학습 사이클
빠르게 MVP를 구축하여 사용자로부터 피드백을 얻고 이를 통해 학습하는 반복적 사이클
구축: 아이디어를 최소 기능 제품(MVP)으로 구현
측정: 사용자 행동 데이터 수집 및 분석
학습: 가설 검증 결과를 바탕으로 인사이트 도출

구축(Build)
아이디어나 가설을 최소한의 비용과 시간으로 구현
완벽한 제품이 아니라 최소한의 비용과 시간으로 가설을 빠르게 검증할 수 있는 MVP를 만드는 것
목적은 고객의 진짜 반응을 확인하는 것이며, 높은 품질의 완성된 제품을 만드는 것이 아니다.
사례: 드롭박스(Dropbox)
Dropbox는 실제 서비스를 완벽하게 구축하지 않고도, ‘제품의 개념을 설명하는 3분짜리 영상’만으로 75,000명의 잠재 고객을 확보하여 가설을 검증했다.

측정(Measure)
측정 단계는 MVP를 통해 실제 사용자의 행동과 데이터를 명확히 수집하는 단계다.
직관이나 예상이 아닌 구체적이고 객관적인 데이터를 통해 가설의 타당성을 확인한다.
사례: 자포스(Zappos)
자포스는 제품 재고를 갖추지 않고 온라인 사이트에 상품 사진만 올려놓은 후 실제 주문율(구매율)을 측정하여 가설을 명확히 확인했다.

학습(Learn)
학습 단계는 측정된 데이터를 기반으로 가설의 옳고 그름을 명확히 판단하고, 다음 전략을 결정하는 과정이다.
가설이 틀렸다면 신속히 인정하고 빠르게 새로운 전략(피봇)을 수립하거나, 가설이 맞다면 그 방향을 더 깊게 탐구한다.
사례: 인스타그램(Instagram)
초기 앱 '버븐(Burbn)'의 데이터를 통해 사용자가 사진 공유만 선호한다는 학습을 얻고 빠르게 피봇하여 대성공을 거뒀다.


최소 기능 제품(MVP)
MVP는 빠르게 고객으로부터 최대한의 학습을 얻기 위한 최소한의 제품이다.
제품의 핵심 가치만을 담아 빠르게 고객의 실제 반응을 확인하고, 이를 통해 더 발전시킬 방향을 결정한다.
사례: 에어비앤비(Airbnb)
초기 Airbnb는 전문 웹사이트가 아니라 Craigslist에 간단히 사진과 숙소 설명을 올려 숙소 임대가 가능한지 빠르게 확인했다.


MVP의 사례 - 쿠팡(Coupang) 
쿠팡의 초기 수기 배송 서비스
초기 상황
한국 시장에서 소비자가 ‘빠른 배송’ 서비스에 진짜 돈을 낼 의사가 있는지 불확실했다.
쿠팡은 빠른 배송 시스템을 완벽히 구축하려면 대규모 물류 시설과 IT 시스템 구축 등 엄청난 초기 비용이 필요했다.

MVP의 사례 - 쿠팡(Coupang) 

쿠팡의 MVP 전략
초기에 대규모 물류 시스템이나 자동화된 IT시스템 구축 없이 실제 직원들이 직접 수작업으로 제품을 포장하고 배송했다.
빠른 배송에 대한 고객의 반응을 빠르게 검증할 수 있었으며, 이 서비스를 좋아하는 고객이 많다는 것을 명확히 확인했다.
이후 로켓배송이라는 대규모 시스템 투자로 확장할 근거를 확보할 수 있었다.

MVP는 무조건 작고 빠르게 만드는 것이 아니다
MVP의 핵심은 작고 빠르게 만드는 것이 아니라, 
"최소한의 노력으로 가장 가치 있는 학습을 얻는 것"이다.
중요한 가설을 정확히 검증하지 못하는 MVP는 아무리 빠르고 작아도 의미가 없다.

어떤 ‘가설'을 검증하고 싶은가가 MVP 개발의 핵심

피봇(Pivot): 전략적 방향 전환
기존 전략이나 방향이 잘못되었다고 판단될 때 빠르게 전환하는 전략
실패를 빠르게 인정하고, 보다 효과적인 방향을 찾아내는 과정


주요 피봇 유형
줌인(Zoom-in): 여러 기능 중 가장 중요한 한 기능에만 집중
줌아웃(Zoom-out): 초점이 너무 좁을 때 더 넓은 관점으로 확장
고객 세그먼트 변경: 목표 고객층을 변경하여 더 적합한 고객을 찾기
비즈니스 모델 변경: 수익 구조나 가격 전략 등을 바꾸는 방법
가치 포착(Value Capture): 가치를 창출하는 방식이나 수익화 전략을 변경하는 것

성공적인 피봇(Pivot)의 사례
Slack(슬랙)
슬랙은 게임 개발 회사로 출발했으나, 게임이 시장에서 실패하자 신속히 사업 방향을 내부 협업용 메신저로 전환했다.
내부적으로 유용하게 쓰였던 도구를 MVP로 검증하여 실제 고객 수요를 확인했고, 결국 협업 도구 시장에서 큰 성공을 거두었다.

피봇에 실패하지 않으려면
피봇의 성공 조건은 정확한 학습과 신속한 결정이다.
잘못된 가설을 고집하지 않고, 데이터를 통해 확인된 현실을 빠르게 수용해야 한다.
명확한 데이터에 기반하지 않은 무작정한 피봇은 실패 확률이 높다.

실천 방안: 린 접근법 도입하기
모든 제품 아이디어를 검증 가능한 가설로 변환
"우리는 이걸 만들어야 해"가 아닌 "우리는 이걸 배워야 해"
MVP 확대: 모든 의사결정에 "최소한의 노력으로" 접근
낭비 요소 지속적 식별 및 제거

린 사고는 다양한 방식으로 활용이 가능하다
린 사고는 단순히 제품 개발에서만 사용하는 것이 아니라, 다양한 영역에서 활용될 수 있다.
린 고객 개발 (Lean Customer Development) : 고객 인터뷰나 MVP를 통해 고객의 진짜 문제를 빠르게 발견하고 검증하는 방법
린 분석 (Lean Analytics) : 제품의 성공을 위한 핵심 지표를 최소한으로 설정하고, 빠르게 지표를 개선해 나가는 방법
린 UX (Lean User Experience) : UX 디자인을 무겁고 완벽하게 설계하지 않고, 최소한의 프로토타입으로 빠르게 사용자 피드백을 받고 개선하는 방식

린 사고가 반드시 모든 문제를 해결해 주지는 않는다
린 사고의 본질은 불확실성을 관리하여 리스크를 줄이는 것
모든 문제를 무조건 해결해 주는 것이 아니다.
문제의 본질을 정확히 이해하지 않고 무조건 린 방법론만 적용하면 실패할 확률이 높다.
결국 문제 해결은 PM의 명확한 문제 정의와 근본적 해결 의지가 가장 중요
린 방법론은 그 과정에서의 효율성을 높이는 도구일 뿐이다.

질의응답 & 토론

사전 질문(15분)
완벽한 계획을 세우는 것이 불가능한 이유는 무엇일까? 이를 극복하기 위해서는 어떻게 해야 할가?

문제 해결을 시도했지만 잘못되었을 때 리스크를 최소한을 줄이기 위해선 어떻게 해야 할까?

수고하셨습니다
